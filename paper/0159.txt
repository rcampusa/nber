                  NBER WORIGNG PAPER SERIES




                  A CONIC ALI3ORITHM FOR THE
                  GROUP MINIMIZATION PROBLflI


                        Bruno Simeone*




                 Working Paper No. 159




COMPUTER RESEARCH CENTER FOR ECONOMICS AND MANAGEMENT SCIENCE
          National Bureau of Economic Research, Inc.
                  575 Technology Square
                Cambridge, Massachusetts 02139



                      December 1976


              Pre1iiriary:   Not for quotation

NBER working papers are distributed infornally and in 1iiited
numbers for coninents only. They should not be quoted without
written peri'nission.

This report has not undergone the review accorded official NBER
publications; in particular, it has not yet been submitted for
approval by the Board of Directors.

*NBE Computer Research Center and Instituto Nazionale per le
 Applicazioni del Calcolo (Rome). Research supported in part by
 National Science Foundation Grant MCS75-20988 to the National
 Bureau of Economic Research, Inc.
                                   ABSACT


A new algorithri for the group nthiiiidzation problen (GP) is proposed. The
algorit1n can be broadly described as follows. A suitable relaxation of
(GP) is defined, in which any feasible point satisfies the group equation
but may ve negative canponents. The feasible points of the relaxation ar
then generated in der of ascending costs by a variant of a well-3ciown
algorithm of Glover, and checked for non-negativity. The first non-negative
point is an    optisl solution of (GP).

      Advantages and   disadvantages of the algorithm are discussed;   in part i-

euler   the   implementation of the algorithm (which can be easily extended   so
as   to solve integer linear progranning problems)   does not require group

arithmetics.
                             TABLE OF CONTENTS


1.   Notations .                                           1
2. introduction                                            2


3. An Introductory Exan1e

4.   The Conic Algorithm                                   7

5. Finding a Non-Negative Basis .     . . .               10

6. Finding a Starting Point                               14

7. Improving the Initial Upper Bound                      18

8. Computational Complexity of The Conic Algorithm:
     A Theoretical Esthrte                                19

APPENDIX                                              .   21

REFERENCES                                            .23
                                         —1--




1. Notations

R              nodule (i.e •,   additive      abelian group)   of    all   real n-vectors.
Zn             the suluodule of Rn       constituted by all      integer     n-vectors.

R              the set Cx: xeR, x.D }.

R"             the   set   fx: xcR1, x<O }.


Z              the set {x:            x>0}.

Zn             the set {x: zr1, x<0 }.

p+V             (pcR', Vd): the set {p+v: vcV}.
AV              (A nxn real    matrix,   VR'): the set {Av: vcV}.

               the k—th unit vector (0,0,. . .       , 1,... , 0),   with 1 at the k-th place.

e              the vector (1,1. , ,   , .1)
Mb              (a ,bcR):     the vector   which is   the mirthnurn ca'nponentwise
               of a and b.
[a]             (acRr5: the vector whose k-th canponent is the integer part of

Ja[            (aCRT1): the fractional part of a, i.e. a-Ia].
                                                 —2—



2.      Introduction

        The group minimization prob1n is


               mm cx   11          nfl
(2.1)
               S . t. g1x1 +. . . + gx       h

                      x non-negative integer             (k1. , , , .   n).
or, in short-hand        notation,

                       cx

(2.2)          s.t. gxh
                             n
                      xcZ

where c is a positive vector of R'1, h is an element of a finite abelian group

C (with operation +), and g is an element of 011.

        Let L be the set Cx: Xzrl, gxh} and K the set {x: xcZrl, gx0}. It
is well )own that K              is a subgroup of Zn and      that L is a coset of Zn modulo

K;   in   other words L=p+K, where p is any particular element of L.

        Let us rewrite (2.2) as


               mmcx
(2.3)
               xcZflL

and denote the feasible set ZhL by X.

        Several methods for solving (2.3) are known ['i'],                    [6],   [7], [8], [9],

[10], [13]. A simple solution strate' is the following: generate all

vectors xx1,. . .       cZ   in order of ascending costs xcxj..., each tine

checking whether the last            vector produced          belongs     to L or not. The

first     k   which   is found     to belong to   L is   an optimal solution of (2.3).
                                           —3—




        Actually, this is the essential idea behind a method for solving the
group min:iinization problem, proposed by Glover 17). This author suggests an
elegant and simple algoritlti for ranking the vectors in Z in order of
ascending costs, provided that the cost vector c is positive. Such an
algorithn will be reviewed in the Appendix. Glover also describes a more
sophisticated version of the algoritl-m, in which only the vectors of a
smaller set V, Zc\kX, need to be generated and ranked •         Such    version has
been    seen   to be   canputationally quite effective [7], [12].

       However, the above approach has the inherited inconvenience that
the density p of the feasible set X in Z is usually low. Actually, p
equals the density of L in Z', which in turn is equal to      where
                                                                IG/KI
G/K is the factor group       of   G riodulo K. If h1,...     is any    basis for
the   subgroup K (assumed to be of full      rank), the order of C/K is equal to
 det   HI, where H is the matrix whose coltmins are                  Hence one
                                                        h1,... hn•
has p
          Idet Hf

       These   considerations suggest that a canplementary approach to the
solution of (2.3) might be undertaken, in which the vectors in sane set S,
LScX, are generated in order of ascending costs and checked for non-
negativity until a vector in Z2 is found. The first such vector is then
an optima]. solution      of (2.3).

          alternative stragegy is implemented in the algoritl-m which will
       This

be described in Section 4.
3. An Introductory Example

      In   order   to   introduce the basic geanetric ideas underlying            the method
to   be described in the next          section,     let us discuss a simple example.
      Consider the group minimization problem over the cyclic group
Z12    {0,   T,..., II), given         by

              mm
                        X1+14 x2
              s.t.      10              2
                             x1+9 x2

                        x1,x2 integers
                                            > 0

                                   —        —          .                    2
The assignment (x1,x2) + 10 x1+9 x2 defines a map from Z to Z12. Such

a map is visualized in fig. 1, where the circle in the point (x1,x2)

contains     the corresponding element Ti
                                                     x1+ x2 of Z12. The feasible set of
(3.1) is the set of all points              of    Z2 which are marked () and      are    contained
in the non-negative quadrant.




                                                                                                    fig 1.
                                                                                           xl
Let us now consider the set 1< of all points in Z2 which                    are marked          .    The

two points (3,2) and (6,0) belong to K; moreover, every                     point in K can be
expressed    as an integer linear combination of such two points, i.e. K is

the lattice spanned by (3,2) and (6,0). Likewise, let us consider the set L

of all points in Z2 which are marked                       ,   and pick up an arbitrary element

of L, say (-1,0). Then every element in L can be expressed as
                                                 —5—




(-1,0) +v1(       3,2) +v2 (6, 0), with v1 arid
                                                    v2    integers (fig.    1).   In other rds,

L can be obtained t1ough               a translation of          the lattice K.

        Next   let    us introduce, for     any     w =
                                                           (w1
                                                                 ,w2) in R2, the t sets


                          {(w1,w2)+v1(3,2)+v2(6,0): v1,v2 integers .               o}
               R(w)       {(w1,w2)+v1(3,2)+v2(6,O): v1,v2 reals . 01


Taking, for example, w = (-1,0), (w) is the set of all "square" points and
V
R(w) is the shaded          region    in fig. 2.
                                                                       \




               0                              '?                      '.','
                                                                                  fig.   2

                                                                           xl




Suppose now we ]ciow a particular             feasible solution         for our   problem,   say

(8,2)   with cost 16. Let          q be   a point of L such that '(q) contains the

triangle      T                           0 real,                    161. It is intuitively
                     {(x1,x2):x,x2                     X1+L1   x2
clear that we can always find             such      a point q, provided that we go

"sufficiently far"          fran T:     in our case, it suffices to take q(-7,0).

(fig.   3).
                                X7


                                                                 .0




Any such point q has the   property   that all   feasible solutions of (3.1)

with cost < 16 are contained in (q). Let us rank the elements of (q)

in order of ascending costs; we get:



                     Costs          —7       —1          '4       5

                     Elements    (—7,0)     (—1,0)     (—'i,2)   (5,0)


The point (5,0) is the first non-negative point of the sequence: hence it

is the opt1na1 solution of (3.1).

     If we had ranked the  points of the non-negative quadrant in order of
ascending   costs, we u1d have needed to generate eight points, rather than
four, before discovering the optinl solution of (3.1).
                                                  —7—




4. The Conic Algorithm
       In the present          section   we outline an algorithm for the group minimiza-
tion    problem         (2.2), which implements the general solution strategy discussed
at    the end      of   Section 2. We maintain       here the   notations of that section.

        It is well J<nown         (see   e.g., Lekkerkerker   [U]   p. 20) that     any full-
rank subgroup           of   Zn admits a non-negative basis(*)•       ri-us, under sane

regularity         assumptions which ensure that K has full          rank, we can always find

a   non-negative non-singular matrix H such that K                        In the next section
we shall give a constructive method for deriving such a matrix H in the case -
the only really interesting one for applications - that (2.2) arises as a
group relaxation of a linear integer prograntiing problem (IF).
        also assume that sane particular feasible solution F of (2.2) is
        We

at hertd, so that z cp is an upper bound for the optimum value of the group
minimization problem. If (2.2) is a group relaxation of an                    IF,   any feasible
solution      of the IF will do the job. Clearly, we are interested only in those

points xeX such that cx<z. Let us denote                    the set of all such points; X

is contained in the simplex T {x: xcR2, cx<z }. If x is any vector in Rn,

we define the integer cone of vertex x spanned by H as the set


               (x)           x+HZ.

Likewise,      we   define     the   real cone of vertex x spanned by H as the set

              (x) x+HR
             ,%,        ,
Clearly, R(x)DZ(x) for all               x.


(*)
      For   the group-theoretic          terminology, see e.g. fl.ichs [5].
                                                —8—




Let q be any point of L such that (q) ? T. Such a point does always exist,
as we shall see in Section 6, and has the following fundamental property:
Theorem 4.1

Proof     Let us     first prove that, for any qcL, '(q)(qY1L. The inclusion a
is   obvious; on the other hand, let x<(q)flL. Then xq+Huq+Ht for sane

ueR2,tcZr.         The last equality implies ut, since H is non-singular. Hence
ucZ, xE(q) arid Z(q)              'f((q1L.


        But   then, since '(q)T, we have (q) '(q)rLT11L = X
        Any element in (q) has the form xq+Hy, where yc Z. Consequently,              its
cost    is given by cx = cq+cHy.             The vector c cH is positive, since c is positive

and H is non-negative and non-singular. Hence, using the Glover' s ranking algorithm

reviewed      in   the Appendix, we can rank the elements of          in order of ascending

c*_Costs c*y0<c*y1<         ...   .   If we put x}Szq+Hyk, the elements of '(q) will then
be autatically ranked in order of ascending c-costs cx°cx1<

       Each tine a new            is produced,    it is tested for non-negativity. The

first    non-negative k is an optimal solution of the group minimization problem
(2.2).    Earlier or later, a non-negative k must be encountered because the

method exhautes all the elements in (q) and (q)2X by theorem 4.1.

To sznarize:

Conic algorithm (C)

0)   We assune -to have at hand sane pcX, with cost zcp.

1) We iild a non-negative non-singular matrix H such that KHZ2                 (see
     Section 5).

2) We pick up a point qcL such that (q)T Cx: xeR', cx<z}. The vector
     q is called      the   starting   point    for the 1gorit1im tsee Section 6).
                                             —9—



      Setting c*                                       n
 3)                     cli,
                       we rank the elements of Z according to ascending costs
      c*yO<c*yl< .. using the ranking algorithn        escribed
                                                          in the Appendix.
      This induTes a rankin,g of the elements of     in order of ascending costs
      cx°<cx-< ... . Each tine we test the last x produced for non-negativity.
    The first non-negative xk discovered is an optimal solution of our problem.
The method just described presents a basic advantage and a basic disadvantage
with respect to the naive version of Glover' s algorithm (NG), discussed in
Section 2. The basic advantage is that (C) generates only vectors in L,

thereby   getting   closer      to the optimal solution of (2.2) at a speed which is

 det HI   tines higher than the       speed of (NG). Put   in other words, while (NG)
generates the current            from a   previous   (as we   shall better see   in   the
appendix) taking "small steps1t:
           -4(     -p
           x       x +Ur

(C) generates xk fran a previous x taking "large steps"

                   x+      hr

where h is the r-th colnn of H.
      The basic disadvantage is that (C) is subjected to the initial handicap
to get started at a point q which may be considerably far fran the feasible set
X. It is clear that, the closer is q to the non-negative orthant, the smaller
is the initial handicap and the nore efficient is (C). In Section 6 we shall
be able to derive an explicit formula for the point q which belongs to L, is
such that (q) T and has least distance frau R. It is also apparent that
(C) is sensitive to the tightness of the upper bound z to the true optimum z.
In Section 8 we shall describe a technique for iroving at low cost the

available upper bound, once the non-negative matrix H has been built.
                                         —10—




        An interesting feature of   (C) is that   it solves the group minimization
problem    without employing group arithmetics at all.

        Finally, we notice that,   in   the case that   (2,2)   arises as a group

relaxation    of an   IF, the method can be easily extended      in order to   find an

optimal solution of the IF. All that is needed is to check the non-negativity
not only of the variables x (which, as it is well known, are the non-basic
variables in the optth.1 solution of the continuous relaxation of the IF),
but also of the corresponding basic variables. The method appears then to

be   well in line with the strategy, emphasized by Wolsey in [i'4],         of solving
the   IF by finding the k-th best solution of its group relaxation.



5. Finding a Non-Negative Basis

      In   the present section, we show how to construct a non-negative integer
matrix H such that KHZn, in the particular case that (2.2) is the group
relaxation of an IF. Let the       IF be


(5.1)        mm dt
             Atb,     tcz2

or,   adding slacks s,

             mm dt
(5.2)        At+Is b
             tcZ,   scZ,
where 'm is the identity matrix of order m. All data are assuned to be integer.
        Dropping the integrality requirements on t and s, one obtains a linear
progranning problem (LP). Let us partition its matrix [A Im] as [B N], where
B and N are formed, respectively, by the basic and by the non-basic colnnns
of [A1m] in an opt3.inal basic solution of the IF. Accordingly, we partition
                                           -11-



the vector Ct f s] as Cy xi where y and x are the basic and the non-basic

variables, respectively. Thus (5.2) becanes




(5.3)        By+Nxb
             ycZ, xeZ2

where      is the optimal value of the LP and c is the vector of reduced costs.

One has c.O: we assume that c is strictly positive.

        Let w be the natural harnorphism          of   m onto the factor group

where <B> is the subgroup        of   Zm spanned by the columns of B, i.e., <B>BZm.

Applying w to both sides of the equation in (5.3), we obtain the group

ation of (5.1):




             w(Nx)=irb   ,     xcZ
which, aside fran the constant , can          be written as     (2.1) by putting h=7rb, g5 ra.,
where a. is the j-th column of N.


    Next,     let us define an nxn      matrix F as follows. Each row fh of F corres-

ponds to the non-basic variable Xh. If Xh is a stnictural variable t, we
define f' to be the row unit vector uT; if is a slack variable     we
                                                                              s,
define f' to be minus the i-th row of A :
                                             _4A. Notice that the matrix F
                                           =

so defined   is all-integer.


Thample If the matrix [AIm] is


                             tl t2 t3 S1 S2

                         r      o 21          01
                         L-i    2         0   iJ
                                              —12—




arid the basic variables are t1, s, then F is given by

                    0       1   0
            t2
                    0       0   1
            t3
                    1 —2 —i


        If K, as in Section 2, is the set {x: Xzr1, gxO}, F has the follow:ing

fundamental property (which is closely related to a result of Bonan [2])


Theorem 5.1      KF?T'.


Proof     Let xcZ'; x belongs to K if and only if ir (Nx)= 0, i.e •,   if   arid only if


(5•L)       By+Nx=0     ,




which   can be rewritten as
                                                                                           )


            At+s0                          scZ'11


or as


            t Iv
               n
            s    —Av
                                                                            I-Il
and finally, after a suitable partition of the rows of the matrix
                                                                                  ' as
                                                                            L-A I
(5.5)       y=D                     avcZ
            x    F'v

But, by construction, F' is exactly equal to the matrix F above introduced, so

we can drop the "prime" in (5.5). Moreover, since [A1m]
                                                                   '[-1
                                                                     -A [1
                                                                         F
                            0, one st have
and [AIm] [:__1

(5.6)       BD+ 0
                                               -13—



Now,    let x     be   any element in K. By the        above   reasoning, there exists a
vcZ      such     that xFv: thus                   Conversely, let   x be such that      xFv
for    sane   vcZn;     if se put   yDv,   y belongs to m, and By+Nx           BDv+NFv =

(BD+NF)v          0 by (5.6).

        Since (5. Li)    is   equivalent to "xeKtt, one has       FZT1=K and the theorem is proved

       We make     the   assumption that     F is non-singular. Then          the   coluiinis of F

constitute a basis far           K, which has      therefore   full rank n.

       A more intrinsic method for finding             a   basis of K, which only requires the

knowledge     of   the group elements g1 ,g2,... ,g, is described in Bell [1], p. 106.

       In any case, with suitable elementary column operations, we can reduce F

to the    HerTIite     canonical forn,     i.e.,   we can find an Hermite matrix         M arid an
uninodular matrix         P such that   FP (see Bradley [3]).
       The matrix N is lower         triangular; its diagonal elements          are positive and

its off-diagonal elements are non—positive. By adding a suitable multiple
of the last column to the second last one, we can replace the second last column
with a non-negative one (actually, with a column whose lower diagonal elements
are positive); by adding a suitable multiple of the new second last column to
the third last one, we can replace the third last column with a non-negative one -
                                               so on, until all the lower
again, with positive lower diagonal elements - and
diagonal elements have becane positive. The process, which is schtized in
figure 4,     amounts     to post-multiply M by an uninodular matrix Q.                The   matrix HMQ is


              +000 +000 +000 +000
              —    + 0 04 — + 0 0_ — + 0 04 + + 0 0
              —    —+0    — — + 0  — + + 0  + + + 0
              —    ——+              ——++               —+++             ++++

                                              Figure 4
                                           _1LI_



non-negative arid is related to F by the identity HFPQ. Since both P arid
Q   are unimodular, their product PQ is urdmodular as well. It follows that,
since F is a bas.s for K, also H is a basis, and is therefore the matrix
we were looking for.
         The above procedure has been presented mainly for expository purposes,.
and should not be regarded as the most efficient one for converting F into
a non-negative equivalent matrix H: thus it is not really necessary to go
through the intermediate stage of an hermitian matrix.


6. Finding a Starting Point
    In this section, we are faced with the problem of finding a starting
point for the conic algorithn. Namely, we want to solve the following:

Problem 1: Find a qcL such that (q)D T and q has least distance from R.
First of all, we observe that, in view of the convexity of R(q), one has
            if and only if '(q) contains the extreme points of T, i.e., 0,
                  u
        U1,..., nfl   .   Hence we are led to consider the following
    1

Problem     2:   Given any   finite   subset A {a5,. .   . ,a}   of R, find a weL   such that

'f(w>,A.
        It is convenient to introduce, in parallel with (x), the set

            (x) x+HRn
where     x is an arbitrary element of Rn.


The following relationships will be needed           later on:
Prop     6.1 a) xc(y)4yER(x)
             b) xe(y)(x)(y)
             b') xc(y)4(x)R(y)
                                              -15-



Proof:       a): It suffices to observe that                 x y+Hvy x+H(-v)
             b):     The imp1icationis obvious. The reverse implication follows
                     fran the fact that, if x y+Hu and t x+Hv, with u, v.O, then
                     t   y+H(u+v), with u+v>O.
             b'):    as b). II


We solve Problem 2 u-i       two steps. First, we show that we                  can always find an x

in Rn such that 'f(x)2Jk.          Indeed,   if such an x does exist, by Prop             6.1   a) one

must have     xc(au),     i=l,...,s, and      hence xc(a1YL..f)(a5). We show that such
an intersection is not empty, and             actually      is an (a) for a suitable aeRT'.


Theorem      6.2 (a1Y1...((a5) (a), where

(6.1)         a


Proof    Let a be defined by            (6.1). Then, for each      iil,..   .   ,s,   there   exists
sane   vcR' such that       a = H(Ha.+v.);         one then has     a a1+Hv.,           i.e., ac(a1)

for each i. Thus, by Prop             6.1, fi(a). R(a1)f".. .flR(a5). Conver"sely, let
xc(a1YL .      .fl(a).     Then    there exist z1,. . . ,z5eR such that x a1+Hz1.. a+Hz                .




or, equivalently, Hx = Ha1+a1. . H'a+z, which implies H'xHa for
                                               .



each i, and
            hence Hx<Ha1A.. .AHa5, i.e., Hx=Ha1A. •n 1a5+v for some
                                                        :
veR . Thus, taking into account (6.1), one has xa+Hv, which proves that


R(a)I1. .flR(a5)çJ(a)
         .
                            II.


       Next,   let us define the cell of           vertex x spanned    by       H as the set


              C(x)       {x+Hr:rcR", Or<e}
where   x is any point of         Rn.

     It is intuitively clear that the collection of all cells C(y), when y
                                                               n
varies within L, constitutes a partition of the whole space R . The next

theorem forirlly proves such assertion and gives                  also, for       each xcR,     an

explicit     fornula for the vertex XL of            the   unique cell C(xL) which contains
x.
                                     —16—



Theorem 6.3 Given any xcR, there exists a unique xcL such that xcC (XL).

Such an XL is given by


(6.2)        XL p + HEll (x—p)].

                               (*)
where p is any element of L.


Proof If XL is the point defined by (6.2), one has (see Section 1 for the

notations): XLFH] H(x-p)E p+HH1(x-p)=x, which proves that xcC(xL).


Let now y be any element of L such that xeC(y). One has yp+Ht for sane

and xy+Hr for sane Q<p<e. Cathining the above equalities one gets H(x-p)t+r,

which implies t[H (x-p)], r=JH (x-p)[ and hence YXL. Thus the uniqueness

of XL is established I   I.
        Combining theorems 6.2 and 6.3, we obtain a constructive answer to
Problem 2:


Corollary 6. The point


(6.3)        w p+H[Ha1A..tHa -       Hp]
belongs to L and is such that


Proof By theorem 6.2, the point a defined by (6 .1) is such that 1((a)A. Thus,

if we put waL_p+H[H (ap)], w belongs to L and, by theorn 6.3, acC(w)(w).

Hence, by Prop 6.1 b), (a)d((w),     so that (w)2A.   Taking into account (6.1),

the expression of w can be simplified to (6.3) II.



(*)it is easy to see that the r.h.s. of (6.2) does not change if we replace
  p by any other p'L.
                                              —17—



        It   is important to notice the following extremality property of
the   point w given by (6.3):


Theorem      6.5   If y is any element of L such that i(y)A, then yc(w).


Proof Since ycL, one        must      have


(6.L)          y = p+Ht,             3tcZ

Canbining (6.L) with the identity.w p+H[H(a-p)] which defines w, one

obtains


(6.5)          H(y—w) t —[H(a—p)] [t—H(a-p)]
                                 V                        A
On the other hand, since R(y)A, it rmist be ycR(a) by theorem 6.2, i.e.,


                                         n
(6.6)         y = a+Hv,              vcR

Fran (6.L)     and (6.6)   we obtain


              t-H(a-p) vO.

Canparing this inequality and (6.5), one has H(y-w)O or, equivalently, ycR(w)


Remark       In deriving the    above results, use has never been made of the non-

negativity     of H. This such results hold for an arbitrary non-singular matrix H.

We have now at hand        an   explicit answer to cxr Problem 1. Let us state   it as
the   conclusive theorem        of   this section.


Theorem 6.6 The point


(6.7)         q p+H[0A2 H1u A . .A— H1u              -
                                                         Hp]
is, rg all the points yeL such that R(y)r, the one having least distance
fran R2.
                                         —18—



Proof    The first two assertions of the theoren, i.e •,       qeL   arid


follow directly fran     Cor.   6.4, specialized to the set A:{O, &         .. . ,— u.}.
                                                          A                en
If y is any   point in   L such that
                                       (y)T,       then ycR(q) by theorn 6.5.

Since H is non-negative, one nust then have y<q, which inplies dist(y,R)>

dist (q,R) II.

     As expected, the point      q depends on      the upper bound    : q:f( z), and   the
(vector)   function f is non-decreasing. This confinris the gonetric intuition
that, the tigher is the upper bound z, the closer is the point q f(z) to
the non-negative ortTharit.


7. Improving the Initial Upper Bound
    As we have seen in Section      4,   the effectiveness of the conic algorithn

is enhanced by the knowledge of a good initial upper bound z. Fortunately,

once a non-negative basis H for k is available, it is usually possible to

improve at low   cost   the upper bound by a simple steepest descent procedure.

If x, yEX, define y to be a predecessor of x whenever


           x y+h.        for sane j,      l<j<n,

where
        h is the j-th column of H. Since the vector c = oH is positive, we
always   have cx>cy. The above-mentioned steepest descent procedure can be
described as follows. Starting fran the known feasible solution p, we look,
among the feasible predecessors of p, for the one, x, with minimal cost cx.
Then we replace p with x and go on, until we find an y without feasible predecessors.

Alternatively, the procedure can be described in the following way.
Re-number the variables x1,. . . ,x in     such a way that    c1>c2>.. .>c. TIn set
                                            —19--




             p0
                        max
             k1               {k:kcZ,   p0—kh1>0}
                   =
                        po_k]hL
                        max
                              {k:kcZ, p1—kh2>0}


             k max {k:kcZ, P1-kh1J}
             pn   :pn—i-kh
                         nfl

It is easily seen       that p. cX     for aU j;    nreover, cp0>cp1>.. . >cp and p          has
no feasible predecessors. Thus the upper bound                  is   improved fran
                                                                                     zcp0 to
Z'cpfl.



8.    Cautational Conplexity of           the Conic Algoritl-un: A Theoretical Estimate

      In this section we shall give a theoretical estimate for the number of

points which need to be generated by the conic algoriti-in ) before finding an
optimal solution for (2.2). The number of such points is approximately equal
to the density of L in            multiplied for the volune of the simplex
V     {x:xe(q),      cx<z*}, where q     is the starting point         of   the algoritl-m and z*
is   the optinu.un value of (2.2).

      Since V q+HY, where Y {y:ycR, cHy<z*.cq}, one has (see Ill], p. 23):


             vol V      Idet HI vol Y =     Idet    HI
                                                          (z—cq)'
                                                         2(ch1ch2. .   .ch)
On the other hand, we have seen in Section 2 that the density of L in Zn                     is
equal to                 Hence the number of points generated by (C) is approximately
             det HI
equal   to
                                   n
                  - 1     (z-cq)
                   2
                        ch1.ch2...ch
                                          —20—



For   the sake of canparison, the naive Glover' s algorithm, mentioned in
Section 2, generates on the whole a number of points NG which is approditely
equal to the volume of the sinplex T* E {x:xcR, c<z*}, i.e.

                   vol T*
                                1    z*
            'NG                           .




The ratio between      and VNG is therefore approxiiiately equal   to

             V
              C.(,     cq
                            n
                                    1 2. . n
                                 C .C

             VNG
                                chlch2" chn

where q is given by fonTlula (6.7): q =          p+H[Qi' Hu1A.. .c H1u-Hp]
The above formula further supports the qualitative remarks which were made

in Section ii. about the relative advantages and disadvantages of the two methods.
                                      —21—




                                      APPEIX


Review of Glover's Rn)dng Algorithm
The method described in Section requires a procedure which, for               a given
positive cost vector c, ranks the vectors of Z in order of ascending costs
0 cx°cx...
     In this appendix we shall review an algorithm due to Glover t 7], which
acccanplishes such a task.
     The first element x° of the sequence is obvisiy the 0 vector. Each
in the sequence is obtained by increasing sane canponent r of a previous vector
x by one unit:
                 x+u]         0p<k,       l<rn.
Of course, p and r depend on k,   and rrk. During the k-th iteration,
   and rk are generated by means of t auxiliary vectors, and
The vector tk, which mey be called the transition vector, is built in such
a way that in its rth canponent tkk we are always certain to find the correct
index p

     Accordingly, the vector ck, which may be called the next-cost vector,
is built in such a way that c cxk. The vectors tk and c are obtained
from tk and      respectively, by modifying only the rk_th canponent of such
vectors.
     Here   are the   details of the algorithm.
            Step 0. (Initialization) Set k0, x°O, tO,c1:c
            Step 1. Increment k by one. Lt             be such that ckk       Tflifl C
                                                                         r           ]
                                                            k
                       (if there is more than   one   such r ,   take   the smallest one).
                                           —22—




                      k  k
            Step 2. Set p t



            Step 3. Set      k k+          uk and k


                                       J
                       Set    k+l
            Step .
                             t        mm {h: k<i1j, h>rk}



                              k+l
            Step 5. Set c                                        Go to Step 1.
                                        t.k+1     k
                                                  .    .
                                       zj +c ifj=r


The sequence x0,x',... generated by the algorithn has the following properties:


1) It is exhaustive, i.e. {x°,x1,.          .} Z
2) h<k =4   0h<k
                             h
3)    h<k and                    is lex-greater than


The   last property   implies that there are no       repetitions in the sequence,
i.e.,                      For the proofs of the above properties, one can
consult [7]; we merely observe here that the vector tk has the crucial property:

                      mm     {h : h<k, h>k }               for   all j   1,. , . ,n.
                                    —23—




                                 REFERENCES



 Ci]   Bell, D,E. "The resolution of duality   gaps   in discrete optimization"
          ORC, MIT, Tech. Rep. 81, Aug 1973.

 [2]   Bownan, V.J. "The strticture of integer programs under the Hermitian
          normal foryn". Oper. Res. 22 (5), pp. 1066—1080, Sept 1974.

[3]    Bradley, G. "Equivalent integer programs", Proc. 5th Intern. Corif.
          of Oper. Res., Venice 1969 (Lawrence,  J.
                                                  edt), Tavestock Pub., London.
[4]    Burdet, C. A. and Johnson, E . L. "A subadditive approach to the group
          problem of integer progranhi±)g", Math. Progr. Studies 2, pp. 51-71,
          1974.

[5]    Fuchs, L. Abelian groups, Per'gamon Press, New York, 1960.

[6]    Gallo, G., Martino, E. and Sisneone, B. "Group optimization aigorithns
          and sane numerical results via a branch and bound approach", Atti
          Convegrio AICA su 'ecniche di Simulazióne ed Algoritrni", Milan
          1972, Tambrini Pub.
[7]    Glover, F. "Integer programning over a finite additive group", SIAM J.
          on Control, 7, pp. 213—231, 1969.

[8]    Ganory, R.E. "Sane polyhedra related to ccmbinatorial    problems",   Lin.
          Aig. and Appl. 2, pp. 451—558, 1969.

[9]    Hu, T.C. "On the asymptotic integer algorithm", Lin. Aig. and Appi. 3,
          pp. 279—294, 1970.

[10] Johnson, E.L. "Cyclic groups, cutting planes and shortest paths"
         Mathiatica1 Progranming, (Hu, T. C. and Robinson, S. eds.) Academic
         Press, New York, 1973.

[ii] Lekkerkerker, C. G. Geanetry of Numbers, North Holland, Amsterdam, 1969.

[12] Northup, W.D. Personal cczrrnunica-tion, Feb 1976.

[13]   Shapiro, J.F. "Group theoretic algoritlins for the integer prograniming
         problem - II: Extension to a general algorithm" Oper. Res 16, pp. 928-
          947,   1968.

[14] Woisey, L.A. "Generalized dynamic prograrruning methods    in integer prograuumthg"
         Math. Progr. 4, pp. 222—232, 1973.
