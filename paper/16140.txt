                               NBER WORKING PAPER SERIES




                          LOTTERIES IN STUDENT ASSIGNMENT:
                              AN EQUIVALENCE RESULT

                                          Parag A. Pathak
                                          Jay Sethuraman

                                       Working Paper 16140
                               http://www.nber.org/papers/w16140


                     NATIONAL BUREAU OF ECONOMIC RESEARCH
                              1050 Massachusetts Avenue
                                Cambridge, MA 02138
                                     June 2010




Pathak's research was supported by the National Science Foundation under grant SES-0924555 and
Sethuraman's research was supported by the National Science Foundation under grant CMMI-0916453.
The views expressed herein are those of the authors and do not necessarily reflect the views of the
National Bureau of Economic Research.

NBER working papers are circulated for discussion and comment purposes. They have not been peer-
reviewed or been subject to the review by the NBER Board of Directors that accompanies official
NBER publications.

© 2010 by Parag A. Pathak and Jay Sethuraman. All rights reserved. Short sections of text, not to
exceed two paragraphs, may be quoted without explicit permission provided that full credit, including
© notice, is given to the source.
Lotteries in Student Assignment: An Equivalence Result
Parag A. Pathak and Jay Sethuraman
NBER Working Paper No. 16140
June 2010
JEL No. D45,D6

                                              ABSTRACT

This paper formally examines two competing methods of conducting a lottery in assigning students
to schools, motivated by the design of the centralized high school student assignment system in New
York City. The main result of the paper is that a single and multiple lottery mechanism are equivalent
for the problem of allocating students to schools in which students have strict preferences and the schools
are indifferent. In proving this result, a new approach is introduced, that simplifies and unifies all the
known equivalence results in the house allocation literature. Along the way, two new mechanisms
— Partitioned Random Priority and Partitioned Random Endowment — are introduced for the house
allocation problem. These mechanisms generalize widely studied mechanisms for the house allocation
problem and may be appropriate for the many-to-one setting such as the school choice problem.


Parag A. Pathak
Assistant Professor of Economics
E52-391C
MIT Department of Economics
Cambridge, MA 02142
and NBER
ppathak@mit.edu

Jay Sethuraman
&ROXPELD8QLYHUVLW\
331 S.W. Mudd Building
500 West 120th Street
New York, NY 10027-6902
js1353@columbia.edu
1         Introduction
A large number of school districts around the world employ centralized mechanisms to
assign students to schools.1 The design of the current student assignment mechanism in
New York City (NYC) is inspired by ideas from the mechanism design literature on the
allocation of indivisible goods (e.g. [19] and [5]).2 The mechanism in NYC consists of a
Main round, followed by a Supplementary round that is meant to assign applicants who
are unassigned after the Main round. The assignment process in the Main round takes
several factors into account including student priorities at each school based on criteria
such as geographic proximity and performance on standardized test scores and has been
studied as a two-sided matching problem [1, 3]. In contrast, the assignment process in the
Supplementary round is quite simple: all unassigned applicants are invited to rank order
high schools with unfilled seats; all students at this stage have the same priority to attend
any school. The Supplementary round involves over 8,000 students, a little more than 10%
of applicants, who are unassigned after the Main round.
        The Supplementary round can be modeled as a setting in which agents rank heteroge-
nous “objects” for which they have equal claims. This raises the following question: if
many students rank the same school as their top choice, which of these students should
be assigned to that school? A lottery mechanism is a way to achieve fairness in the as-
signment process. In a single lottery mechanism, a single random ordering of the agents is
drawn; any ties (at any school) are broken in favor of the student whose lottery number is
lower. A natural alternative is a multiple lottery mechanism, which allows each school to
conduct its own lottery. The actual assignment is made by the core mechanism applied to
the preference profiles of the students and the priority profiles of the schools [5].
        During the course of the design of the new assignment mechanism, policymakers from
the NYC Department of Education (DOE) believed that a mechanism based on a single
lottery is less equitable than lotteries at each school. After deciding on two rounds, they
    1
        See [5] for descriptions of several systems in the United States, [6] for a description of Turkish college
admissions, [8] for a description of the Chinese college admissions system, and [14] for details on the public
school choice plan in Tel-Aviv, Israel. In England, centralized mechanisms are present in many urban areas
(see, e.g., [9]).
   2
     A large theoretical literature on school choice problems has developed following [5]. See [1], [2], [3]
[11], [10], [12] and [18].


                                                          2
were still concerned with the question of how to resolve indifferences for each round. After
community forums, one DOE official summarized the discussion:3

         Although students might not get their first choices, they were considered separately
         for each program. There was a rank order established and each student had an
         equal chance to be selected. [...] If we want to give each child a shot at each
         program, the only way to accomplish this is to run a new random. [...] I cannot see
         how the children at the end of the line are not disenfranchised totally if only one
         run takes place. I believe that one line will not be acceptable to parents. When I
         answered questions about this at training sessions, (it did come up!) people reacted
         that the only fair approach was to do multiple runs.

       This quotation motivates our comparison of single and multiple lotteries for student
assignment problems. The main result, in §3, is a proof of the equivalence of the single and
multiple lottery mechanisms in a setting where each school may have multiple seats and each
student has strict preferences over schools. To prove this result, we begin by assuming that
schools can admit only one student, but instead introduce a new mechanism that we call
Partitioned Random Priority (PRP). Under the PRP mechanism, we are given an arbitrary
partition S1 , S2 , . . . , Sk of the schools; the schools within each Si use a common lottery, and
distinct Si ’s use an independent lottery.4 We show that the distribution of assignments
under the PRP mechanism is the same, regardless of the partition of the schools.
       We prove a similar equivalence result for another new mechanism that we introduce
called Partitioned Random Endowment (PRE), which can be thought of as a generalization
of both the single lottery mechanism and the Random Endowment (RE) mechanism. In the
RE mechanism, each agent is endowed with a distinct house, each of the n! endowments be-
ing equally likely; the resulting allocation is the core of the associated economy, computing
using the top trading cycles (TTC) procedure defined by Shapley and Scarf [20]. In PRE,
we are given a partition S1 , S2 , . . . , Sk of the schools; the students are partitioned—in a
particular way that is described in §2.2—into sets N1 , N2 , . . . , Nk such that Ni has exactly
   3
       See [16] for additional statements by DOE policymakers about the perceived fairness of multiple lot-
teries relative to single lotteries.
   4
     If each school is in a partition by itself we recover the multiple lottery mechanism; if all the schools
belong to a single partition, we recover the single lottery mechanism.


                                                      3
|Si | students, and every school in Si has a common ranking of the students in Ni . Thus, if
each school is in a partition by itself, we recover the RE mechanism; if all the schools form
a single partition, we recover the single lottery mechanism. Our equivalence result thus
subsumes the earlier equivalence result, due independently to Abdulkadiroğlu & Sönmez [4]
and Knuth [13], of the RE and single lottery mechanisms.
    Finally, in contrast to the proofs of earlier equivalence results, our proof technique is
elementary, inductive, and relies on basic properties of the cycle structure of permutations.
We illustrate the usefulness of this approach by providing, in §4, a simple alternative proof
of another equivalence result as well as a new equivalence result in the context of house
allocation with existing tenants.


2     The Model
Let N denote the set of students and S the set of schools, and suppose |N | = |S| = n.
Each student has a strict preference ordering of the schools, and wishes to attend exactly
one school. Each school wishes to admit exactly one student, but does not care which one
it admits. Because the school preferences exhibit extreme indifference, we can view this
problem as a house allocation problem in which the agents are students, and the houses
are schools—this analogy is possible only because the schools are treated as objects that
do not care who they are allocated to. Not surprisingly, the mechanisms proposed for the
school choice problem have been inspired by the house allocation literature [5, 3, 11, 17].


2.1    Existing Mechanisms
An important ingredient in house allocation mechanisms is the precise manner in which
conflicts between agents are resolved: if many agents rank the same house as their most-
preferred house, which one of them gets it? If houses had strict preferences (as would be the
case in a two-sided matching problem), such conflicts can be resolved based on the preference
ordering of the house in question. As houses do not have strict preferences, a natural idea
is to generate a priority list of agents for each house that will be used to resolve conflicts.
The various mechanisms proposed for the house allocation problem differ only in how these



                                              4
priority orderings are generated (equivalently, how such conflicts are resolved). We review
the prominent mechanisms before describing the two new mechanisms we propose.

Random Endowment (RE). Each agent is given top priority at a distinct house, with
each of the n! possibilities being equally likely. For a given priority list, the resulting
allocation is the (unique) core of the associated trading game in which the top-priority
agent at any house is said to “own” that house. This allocation can be found using the
TTC algorithm: construct a graph with one node for each agent; there is an arc from node
i to node j if agent j owns agent i’s most-preferred house (note that j could be i, in which
case there will be a self-loop). This graph must have a cycle as every node has out-degree
1 and the graph is finite; each agent in the cycle is assigned the house owned by the agent
he points to, all these nodes are deleted, and the computation is repeated on the residual
problem, which involves only the remaining agents and the remaining houses, each of which
is necessarily owned by a distinct remaining agent.

Random Priority (RP). The agents are ordered randomly, with each of the n! orderings
being equally likely. Every house uses this ordering as its priority list. For any given priority
list, the resulting allocation is found as before by the TTC algorithm, with the modification
that each house is owned by the agent who appears first in its priority list. Note that, with
this new definition, an agent may own multiple houses at a time; moreover, a house owned
by some agent may be owned by a different agent later on. Neither one of these aspects
is present in the RE mechanism. Finally, observe that this mechanism is equivalent to
the more familiar description of the RP mechanism: the agents are ordered uniformly at
random, make their choices according to this ordering, and pick their most-preferred house
that is still available when it is their turn.

Independent Random Priority (IRP).                   Each house draws a random ordering of the
agents, independently of the other houses, with each of the n! orderings being equally
likely. Thus the priority profile of the houses is equally likely to be any one of the (n!)n
possibilities. For any given priority profile, the resulting allocation is found as before by
the TTC algorithm.



                                                 5
   The three mechanisms introduced so far—RE, RP and IRP—all have very different
descriptions. It is therefore remarkable that all of these mechanisms are equivalent! The RP
and RE assignments are obtained by running the TTC algorithm on n! profiles. That they
find the same distribution over assignments was shown independently by Abdulkadiroğlu &
Sönmez [4] and Knuth [13]. Remarkably, both papers construct a bijective proof—with any
given ordering of the agents (RP), they associate a distinct endowment (RE) such that the
resulting final assignment is identical. In contrast, the IRP assignment is found by running
the TTC algorithm on (n!)n profiles. Pathak [17] proves the equivalence of RP and IRP
using the following approach: he associates with any given ordering of the students a set of
(n!)n−1 priority profiles of schools such that the resulting final assignment is identical, and
such that the sets of priority profiles associated with distinct student orderings are disjoint.
This result, coupled with the earlier equivalence result of Abdulkadiroğlu and Sönmez [4],
establishes the equivalence of RE and IRP mechanisms as well.


2.2    New Mechanisms
The mechanisms discussed so far were all for one-to-one allocation problems: each agent
wishes to be assigned a house and each house can be assigned to exactly one agent. The
assignment problems arising in school choice, however, are typically many-to-one: a school
can admit many students, whereas each student still wishes to be assigned to one school.
We can, of course, formulate an equivalent one-to-one version of the problem: if a school
can admit 13 students, we can make 13 copies of that school, and have each student rank
all the copies of this school in an arbitrary (but fixed) way. Note also that there is no
difficulty in extending the RP mechanism. But the IRP and the RE mechanisms are
somewhat unnatural in the equivalent one-to-one formulation. Ideally, we would like the
IRP mechanism to allow the priority list of each school to be generated independently; in
the equivalent one-to-one formulation, IRP allows each “seat” to generate its own priority
list, so that different copies of the same school may have different priority lists. A similar
problem plagues the RE mechanism. To remedy this difficulty, we introduce the following
two new mechanisms for the school choice problem. (To emphasize the application, we
switch to students and schools instead of agents and houses.)



                                               6
Partitioned Random Priority (PRP). Fix an arbitrary partition of the schools S into
sets S1 , S2 , . . . , Sk . School priority lists are determined in the following way: For each i, the
schools in Si have identical priority lists, which are generated independently and uniformly.
Thus, each of the (n!)k priority profiles is equally likely. The distribution of assignments
under the PRP mechanism can be found by running the TTC algorithm on each of the
(n!)k possible priority profiles. Note that when each school is in a partition by itself, we
recover the IRP mechanism; and when all the schools are in one partition, we recover the
RP mechanism.

Partitioned Random Endowment (PRE). Fix an arbitrary partition of the schools
S into sets S1 , S2 , . . . , Sk . School priority lists are determined in the following way: the
students are arranged uniformly at random, all n! orderings being equally likely. From this
random ordering, the first |S1 | students form the top |S1 | choices of each of the schools in
S1 ; the next |S2 | students form the top |S2 | choices of each of the schools in S2 , etc. Again,
the distribution of assignments under the PRE mechanism can be found by running the
TTC algorithm on each of the n! possible priority profiles. Note that when each school is
in a partition by itself, we recover the RE mechanism; and when all the schools are in one
partition, we recover the RP mechanism.

    Our main result (in §3) is that, for both mechanisms, the distribution of assignments
is the same for any partition of the schools. In particular, the IRP and PRE mechanisms
are equivalent to the RP mechanism. Thus our main result generalizes the earlier results
of Pathak [17], Abdulkadiroğlu & Sönmez [4], and Knuth [13].


3     The Equivalence Result
Let S1 , S2 , . . . , Sk be a partition of the schools. What does it mean to generate a random
preference profile with respect to this partition? We start with the PRP mechanism.
Imagine n cards—one for each student— arranged in a sequence next to each school. The
cards are all face-down, and the sequences are identical for all the schools in each Si .
Consider now the PRE mechanism. As in the PRP mechanism, all the schools within a
given Si have an identical priority list. The difference is that, in the PRE mechanism, the

                                                  7
schools in Si have an identical ranking of |Si | students, and these students are not in the
“priority” list of any of the other schools. That is, the students are partitioned so that
exactly |Si | students appear in the priority list of the schools in Si , and they are ranked
identically by the schools in Si , with each of the |Si |! rankings being equally likely.
    When can the TTC algorithm find a given cycle C = (i1 , i2 , . . . , im )? The TTC algo-
rithm can find C only if, for every 1 ≤ ` ≤ m, student i`+1 has the top priority at student
i` ’s most-preferred school (where im+1 is to be read as i1 ). In particular, the m students
in C should all have distinct most-preferred schools. Suppose the TTC algorithm finds
cycle C in the given priority profile. We can delete the students in C along with their
most-preferred schools; we can also remove the cards bearing the name of any student in
C from the remaining (n − m) schools, as these students have no further role to play in
the TTC algorithm. We call the instance thus obtained as the residual instance after elim-
inating cycle C. Let S10 , S20 , . . . , Sk0 be the partition of the remaining (n − m) schools where
Si0 contains those schools in Si that are still in the residual instance. (Note that each Si
can lose at most one school. Also, if some Sj0 is empty, it can be deleted, so the number
of non-empty classes in the partition for the residual instance may be strictly smaller than
k.) The critical observation is that—for both PRP and PRE mechanisms—this residual
instance is equally likely to be any of the possible profiles with the partition S10 , S20 , . . . , Sk0 0 .
This follows from the observation that eliminating cycle C does not convey any informa-
tion about the priority lists of any of the remaining schools with respect to the remaining
students.
    It is clear that cycles play an important role in both mechanisms. Moreover, the cycles
that could be found as a first cycle are the same for both PRP and PRE, so the discussion
that follows applies to both mechanisms. To make these notions precise, we introduce some
notation. Recall that S1 , S2 , . . . , Sk is the given partition of the schools. For i = 1, 2, . . . , k,
let Ni be the set of students whose most preferred school is in Si . From the earlier discussion,
any cycle that can be found as a first cycle can have at most one student from each Ni . Let
C be the collection of all such cycles. We use C to denote a generic member of C, and let C
be the set of students involved in the cycle C. Note that it is possible for C, C 0 ∈ C, C 6= C 0 ,
and C = C 0 . Given two cycles C, C 0 ∈ C, we say that C and C 0 conflict if for some i, Ni ∩ C
and Ni ∩ C 0 are both nonempty. For any ` ≥ 1, C ` consists of products of ` cycles of C


                                                     8
such that no pair of cycles conflict. Note that C 1 is just C, and C ` consists of products of `
distinct cycles of C, all of which can be simultaneously present in some priority profile (and
each of which can potentially be uncovered as a first cycle). We illustrate these definitions
on the following example.

Example 1. Consider the following instance with 5 students and 5 schools, each with one
seat. The strict student preferences are:


                                         1 2 3 4 5
                                         a a b d c
                                         b d a b e
                                         c c d a a
                                         d b c c b
                                         e e e e d

   Suppose the given partition of the schools is S1 = {a, d}, S2 = {b, e}, and S3 = {c}.
Then, N1 = {1, 2, 4}, N2 = {3} and N3 = {5}. In this case

     
  C = (1), (2), (3), (4), (5), (13), (23), (43),
                                                                                               
                               (15), (25), (45), (35), (135), (153), (235), (253), (435), (453) .

   Note that cycle (3) can be uncovered only if b has 3 as its top priority student; cycle
(25) can be uncovered only if c has 2 as its top priority student and a has 5 as its top
priority student; finally (435) can be uncovered only if schools d, b, and c have students
3, 5, and 4 as their top priority students respectively. We distinguish the cycle (453) from
(435) because (453) can be uncovered only if schools d, b, and c have students 5, 3, and
4 as their top priority choices respectively. (Thus the top priority students of d and b are
switched in these two cycles.) We turn now to C 2 . By definition, C 2 consists of products of




                                                   9
two distinct cycles of C that can be simultaneously present in a priority profile. Thus
              
      2
  C       =       (1)(3), (1)(5), (2)(3), (2)(5), (4)(3), (4)(5), (3)(5),
                                                                                                     
                      (13)(5), (23)(5), (43)(5), (15)(3), (25)(3), (45)(3), (35)(1), (35)(2), (35)(4) .

Note that the product of cycles (1)(4) is not in C 2 even though the individual cycles (1) and
(4) are both in C. This is because it is not possible for both agents 1 and 4 to be part of a
cycle in the first iteration (as their most preferred schools both belong to S1 ). Similarly, it
is easy to check that                                                            
                                       3
                                   C       =       (1)(3)(5), (2)(3)(5), (4)(3)(5) ,

and C ` = ∅ for ` > 3.

       Before stating the main result, we prove the following lemma on the cycle-structure of
permutations. This is a well-known result, but we present a proof for the sake of complete-
ness.

Lemma 1 Let c(m, `) be the number of permutations of m elements that can be written as
a product of ` cycles 5 . Then, for any m > 1,
                                               m
                                               X
                                                     (−1)`−1 c(m, `) = 0.
                                               `=1

Proof. For any m > 1,

                             c(m, `) = c(m − 1, ` − 1) + (m − 1)c(m − 1, `).                             (1)

       The left-hand side is, by definition, the number of permutations of m elements that can
be written as a product of ` cycles. The right-hand side counts the same set of permutations
in a different way: either the element m is in a cycle by itself, in which case the rest of the
elements have to be written as a product of ` − 1 cycles; or, the element m is in a cycle
with some other element(s), in which case the remaining elements have to be written as a
   5
       The numbers c(m, `) are known as the unsigned Stirling numbers of the first kind, see [24] for further
details.


                                                             10
product of ` cycles, and element m can be inserted into this product in (m − 1) ways. We
use the recurrence relation (1) to prove the lemma by induction.
   It is clear that c(2, 1) = c(2, 2) = 1, so the lemma is true when m = 2. For any m > 2,
using the recurrence relation (1) we have:
    m
    X                          m
                               X                                    m
                                                                    X
             `−1                            `−1
          (−1)     c(m, `) =         (−1)         c(m − 1, ` − 1) +   (−1)`−1 (m − 1)c(m − 1, `).
    `=1                        `=1                                 `=1

Noting that c(m − 1, 0) = c(m − 1, m) = 0, we find that the first of these terms is the
alternating series

      −c(m − 1, 1) + c(m − 1, 2) − c(m − 1, 3) + . . . + (−1)m−1 c(m − 1, m − 1),

whereas the second is the alternating series
                                                                                 
                                                               m−2
 (m − 1) c(m − 1, 1) − c(m − 1, 2) + c(m − 1, 3) + . . . + (−1)    c(m − 1, m − 1) .

Adding these two terms we get
                                              m−1
                                              X
                                 (m − 2)            (−1)`−1 c(m − 1, `),
                                              `=1

which is zero by the induction hypothesis.

   We are now ready to state the main result.

Theorem 2 The distribution of assignments determined by the RP mechanism is identical
to the distribution of assignments under the PRP mechanism, for any partition of the
schools.

Proof. The result is clearly true when there is one student and one school. Consider
an instance with n students and n schools, and suppose the result holds for all smaller
problems. Fix a partition S1 , S2 , . . . , Sk of the schools.
   Let RP (X) denote the outcome of the RP mechanism when the agents in N \ X are
removed along with their most-preferred schools. Since each agent is equally likely to be the



                                                       11
first agent in the uniform random ordering chosen by the RP mechanism, we can conclude
that
                                           n                     
                                          X   1
                                 RP(N ) =         Yi + RP(N \ {i}) ,                                       (2)
                                          i=1
                                              n

where Yi indicates the assignment of student i to his most-preferred school.
         Now we turn to the PRP mechanism. As discussed earlier, the PRP mechanism works
by finding a cycle (that is necessarily in C by definition). Let P (C) be the probability that
cycle C can be uncovered (i.e., cycle C is present in a priority profile that is drawn uniformly
at random from all possible priority profiles), and let YC indicate the assignment in which
each student in C is allocated his most-preferred school. Thus, analogous to Eq. (2), we
may be tempted to write
                                               X                          
                             PRP(N ) =                P (C) YC + PRP(N \ C) ,
                                              C∈ C

This, however, is incorrect: it is possible for cycles C and C 0 to both be present in a given
profile, in which case that profile is counted once for C and once for C 0 in the expression
above. The profiles that are over-counted are precisely those in which a cycle in C 2 is present
6
    ; but subtracting these would under-count profiles that contain three distinct cycles from
C: these are counted thrice, once for each cycle, but subtracted thrice as well, once for each
pair of cycles, so we need to add back the profiles that contain a cycle in C 3 . Taking this
argument to its logical conclusion, we find:
                                       k X
                                       X                                              
                                                            `−1
                       PRP(N ) =                     (−1)         P (C) YC + PRP(N \ C) ,                  (3)
                                        `=1 C∈ C `


where YC and C ` are as defined earlier.
         Consider any subset X of students, and let |X| = m. Suppose there is a cycle C in C `
such that C = X. Observe that P (C) = 1/nm —for any agent in X, the cycle C assigns
his most-preferred school to a particular agent (also in X) and this occurs with probability
1/n, independently, for each of the m agents in X. If, on the other hand, there is no
     6
         To avoid cumbersome notation, we use C to denote a generic element in C ` , for any ` ≥ 1. Any element
C ∈ C 2 is a product of two cycles, not a simple cycle.


                                                             12
cycle in C ` involving the agents in X, we can take P (X) = 0. In either case, we can write
P (X) instead of P (C), as this probability only depends on the number of agents in C.
Furthermore, the term inside the braces in the right-hand side of Eq. (3) depends only on
X, not on the actual cycle involving the agents in X. Using these observations, we can
rewrite Eq. (3) as

                         X                             k X
                                                        X           
                                                                 `−1
          PRP(N ) =             YX    + PRP(N \ X) P (X)     (−1)      .                (4)
                        X:X⊆N                                        C`
                                                                `=1 C∈
                                                                    C=X


We now focus on the term inside the braces in Eq. (4). As X has only m students, it is
clear that for any ` > m, no cycle C ∈ C ` can have C = X. This means that the upper
limit of the first summation in that term can be changed from k to m. Therefore, we have
                                                                    
       Xk X                Xm X                Xm                   1, if m = 1,
                 (−1)`−1 =           (−1)`−1 =    (−1)`−1 c(m, `) =
                                                                    0, if m > 1,
      `=1 C∈ C `           `=1 C∈ C`              `=1
          C=X                  C=X

where the last expression follows from the definition of c(m, `) and Lemma 1. Thus the
only terms that survive in the RHS of Eq. (4) are those for which |X| = 1. In this case,
however, P (X) = 1/n, and Eq. (4) simplifies to
                                   n                      
                                  X   1
                        PRP(N ) =         Yi + PRP(N \ {i})                             (5)
                                  i=1
                                      n

   By the induction hypothesis, P RP (N \ {i}) = RP (N \ {i}) regardless of the partition
of the schools (in the problem without student i). We see that the expressions determining
P RP (N ) and RP (N ) are identical, establishing the result.

   An important consequence of Theorem 2 is the analog of Pathak’s result for school
choice in which schools can admit more than one student.

Theorem 3 Consider a school choice problem with n students and k schools. Suppose
                                           P
school i can admit qi students, and suppose i qi = n. The distribution of assignments
obtained by the TTC algorithm is the same, whether a common lottery is used for all the
schools, or whether each school uses its own independent lottery.

                                             13
Proof. Make qi copies of school i, and replace all occurrences of school i in the student
preference lists by an arbitrary, but consistent ordering of all its copies; this results in
an equivalent one-to-one matching problem. Place all the copies of a given school into
one partition, so that the partition structure of the “schools” for the PRP mechanism is
precisely S1 , S2 , . . . , Sk , where Si consists of all copies of school i. The RP mechanism finds
the outcome when a common ordering used by all the schools; the PRP mechanism finds
the outcome in which each school uses an independent ordering of the students. The result
now follows from Theorem 2.

   We state and prove a parallel result for the PRE mechanism.

Theorem 4 The distribution of assignments determined by the RP mechanism is identical
to the distribution of assignments under the PRE mechanism, for any partition of the
schools.

Proof. The proof is identical to the proof of Theorem 2 with the only change being the
expression for P (C). For the PRP mechanism we saw that P (C) = 1/nm whenever C is a
cycle involving m students; for the PRE mechanism, however,
                                          1 1        1
                                P (C) =        ...       .
                                          nn−1     n−m+1
This is so because the most-preferred schools of the students involved in the cycle C all
are required to have distinct top-priority students. The exact expression for P (C) does not
matter whenever C has more than one student because of the cancellation of terms (by
Lemma 1). When C has exactly one student, or equivalently when m = 1, P (C) = 1/n as
in the proof of Theorem 2, and the result follows.

   This theorem has a number of implications and extensions. First, Theorem 4 provides an
alternative proof of the equivalence of RP and RE mechanisms: this alternative proof relies
on induction and counting, instead of the original bijective argument, due, independently, to
Abdulkadiroğlu & Sönmez [4] and Knuth [13]. A similar comment applies to the alternative
equivalence proof of RP and IRP, implicit in Theorem 2.
   Moreover, the discussion preceding Lemma 1 suggests a simple equivalence proof of the
RE and IRP mechanisms. Recall that in the IRP mechanism, each school is in a partition

                                                14
by itself and generates its priority list uniformly at random, independently of the other
schools. As the sets C ` are identical for both RE and IRP for any ` ≥ 1, we may conclude
that the expressions— like Eq. (3)—for the RE and IRP mechanisms will be identical,
making Lemma 1 unnecessary. Note, however, that Lemma 1 is still needed: although
RE and IRP are very similar, P (C) is different for these two mechanisms, so the recursive
expressions are indeed different.
    Furthermore, we defined the PRP and PRE mechanisms with respect to a fixed partition
of the schools. However, the equivalence proof of Theorem 4 applies more broadly. Consider
a model in which there is an initial partition of the schools, and the top priority student
for each partition is drawn as in the PRP (or PRE) mechanism. The outcome of the
TTC algorithm in this step determines the partition of the remaining schools in the next
step, at which point the top priority student for each partition is determined again. Thus,
the partition at stage t of the algorithm could depend on the entire history of allocations
determined in stages 1, 2, . . . , t − 1. This (and closely related) models are discussed in
Papai [15], Chen [7], and Svensson & Larsson [22]. Theorem 4 establishes the equivalence
of all of these mechanisms to the RP mechanism.
    Finally, consider the following model for generating priority lists for the schools. Sup-
pose we are given (N1 , N2 , . . . , Nn ) with each Ni ≥ 1. Consider a box in which there are
Ni balls of color i. A ball is drawn at random from this box, and if the drawn ball is of
color i, then i gets top priority, all balls of color i are removed the box, and the procedure
is repeated. Note that the probability of agent i having a higher priority than agent j is
Ni /(Ni + Nj ), regardless of which other agents are present. (If the Ni are identically 1,
we get the uniform distribution.) It is a simple matter to check that if all priority lists
are drawn from this distribution, then the uniform lottery mechanism is equivalent to the
multiple lottery mechanism.


4     House Allocation with Existing Tenants
We can use these ideas to obtain a simpler proof of another equivalence result, due to
Sönmez and Ünver [23], on house allocation with existing tenants. In an instance of this
problem there are n agents and n houses; (n − r) of the agents are existing tenants, each


                                             15
of whom already occupying a distinct house; the remaining r agents and the r unoccupied
houses constitute the new arrivals to the problem. There is a natural generalization of the
RP and RE mechanisms to this setting. First we describe the RP mechanism: order the
agents uniformly at random, and let agents make their choices in this order, except that
whenever an agent j demands a house already occupied by an agent j 0 , then j 0 gets promoted
to just before j in the ordering. In this case, j 0 is invited to make his choice, and j picks
only after j 0 is assigned a house (that may possibly be the one that he already occupies).
For the RE mechanism: endow the new houses uniformly at random to the new agents, each
existing tenant is endowed the house he occupies, and apply the TTC algorithm to this
trading game. It is not hard to see that, as defined, the RE mechanism is not equivalent
to the RP mechanism. This is because the new agents are treated preferentially in the RE
mechanism: if j 0 is an existing tenant who happens to occupy a house that is the last choice
for all the agents (including himself!), j 0 cannot be assigned any other house under the RE
mechanism, but he could get other houses under RP. Sönmez and Ünver [23] modify the
RP mechanism in the following way: the new agents are ordered uniformly at random, and
the existing tenants appear after the new agents in an arbitrary order 7 . They show that
this modified RP mechanism is equivalent to the RE mechanism. We prove this result next.
(To emphasize the distinction in context, we use the terms “agents” and “houses” in this
section instead of students and schools.)

Theorem 5 For the house allocation mechanism with existing tenants, the RE mechanism
(which assigns the new houses randomly to the new agents) is equivalent to the RP mecha-
nism in which all the new agents are ordered uniformly at random before any of the existing
tenants.

Proof. We prove the result by induction on the number of existing tenants. If there are
no existing tenants, the result follows from Theorem 4.
       Suppose there are ` existing tenants. We may assume that initially there is no cycle
involving the existing tenants alone: that is, there is no set of existing tenants i1 , i2 , . . . , im
   7
       We could of course look at uniform random orderings of the existing tenants as well, but as it turns
out their exact ordering does not matter as long as they appear after the new applicants. This will be
apparent from the proof.



                                                     16
such that the most preferred house of agent ij is the one occupied by ij+1 (where im+1 is
read as i1 ). If there is one, observe that the RE and RP mechanisms will always assign
these houses to these agents such that each agent in this set gets their most-preferred house;
we can then delete these agents and their respective houses, and the result would follow by
induction (as we have an instance with fewer existing tenants).
   Suppose there are n agents and n houses in all, and suppose there are r new applicants,
who, without loss of generality, we assume to be agents 1, 2, . . . , r. Then, in the RP
mechanism, each of the r new agents is equally likely to be the first. Suppose (new) agent
i is first. As we assume that there is no cycle involving the existing tenants alone, observe
that agent i will necessarily receive his first choice—either i’s first choice is an unoccupied
house, or i’s first choice is an occupied house, in which case the owner of that house will ask
for his best choice; this latter house is either unoccupied (in which case the chain stops),
or is occupied by another existing tenant, who will now ask for his best choice, etc. By our
assumption, this chain will have to end with an existing tenant asking for an unoccupied
house. The agents involved in this chain, including agent i, will all get their most-preferred
house. Let Ci be the set of agents involved in the chain started by agent i. Note that Ci
contains i and does not contain any other new applicant. The relevant recursion for the
RP mechanism is
                                  r                       
                                 X   1
                        RP(N ) =        YCi + RP(N \ {Ci }) ,
                                 i=1
                                     r

where YCi indicates the assignment in which the agents in Ci get their most-preferred
houses.
   Let C be the set of cycles that can be uncovered as a first cycle by the RE mechanism.
As before, we think of cycles as involving just the agents as it is understood that the
houses involved are all the most-preferred houses of the agents in the cycle. Let C ` be
defined analogously as well, for ` = 1, 2, . . ., with C 1 = C. Finally, note that the existing
tenants are always endowed with the houses they occupy. Clearly,
                               r X
                               X                                            
                                                   `−1
                 RE(N ) =                   (−1)         P (C) YC + RE(N \ C) ,            (6)
                               `=1 C∈ C `


where YC and C ` are as defined before.

                                                    17
   Consider an arbitrary set X ⊆ N of agents. Suppose there is a cycle C in C ` such
that C = X. As the endowment of the occupied houses is fixed, it is clear that for any
agent i ∈ C, if i’s most-preferred house is an occupied house, then i must be followed by
the existing tenant occupying that house. So the only agents in C for whom a successor
is not already determined are those whose most-preferred house is new. Suppose there are
exactly m of these agents in C. Then, observe that
                                          1 1        1
                                P (C) =        ...       .
                                          rr−1     r−m+1
This is because the new houses that each of these agents desire must each be endowed to a
distinct new applicant—there are r choices for the first new applicant, r − 1 for the second,
and so on. As before, if there is no cycle in C ` involving the agents in X, we can take
P (X) = 0. In either case, we can write P (X) instead of P (C), as the probability does not
depend on the cycle, but only on the set of agents involved in the cycle (in fact, it depends
only on m and r). Furthermore, the term inside the braces in the right-hand side of Eq. (6)
depends only on X, not on the cycle X itself. Using these observations, we can rewrite
Eq. (6) as

                         X                            r X
                                                       X            
                                                                 `−1
             RE(N ) =            YX   + RE(N \ X) P (X)     (−1)      .                  (7)
                        X:X⊆N                                `=1 C∈ C `
                                                                 C=X


We now focus on the term inside the braces in Eq. (7). As |X| has only m agents whose
most-preferred house is new, and as each cycle in C has at least one of these agents, it is
clear that for any ` > m, no cycle C ∈ C ` can have C = X. This means that the upper
limit of the second summation can be changed from r to m. Therefore, we have
                                                                  
      X r X                m X
                           X                Xm                    1, if m = 1,
                 (−1)`−1 =        (−1)`−1 =     (−1)`−1 c(m, `) =
                                                                  0, if m > 1,
      `=1 C∈ C `                `
                           `=1 C∈ C               `=1
          C=X                  C=X

where the last expression follows from the definition of c(m, `) and Lemma 1. Thus the only
terms that survive in the RHS of Eq. (7) are those for which there is exactly one agent whose
most-preferred house is new. This also implies that there is exactly one new applicant in
the cycle—as the new houses are all endowed to the new applicants, the number of new


                                             18
houses in any cycle should equal the number of new applicants in the cycle. In this case,
however, P (C) = 1/r, and Eq. (6) simplifies to
                                     r                               
                                     X 1
                        RE(N ) =                YCi + RE(N \ {Ci })                       (8)
                                      i=1
                                            r

By the induction hypothesis, RE(N \ {Ci }) = RP (N \ {Ci }). We see that the expressions
determining RE(N ) and RP (N ) are identical, establishing the result.

   The equivalence of RP and IRP mechanisms can be generalized to this setting as well.
The RP mechanism was defined earlier in this section, but the following equivalent definition
will be convenient: first a common priority ordering of the agents is drawn for all houses.
The priority ordering for each new house is this common priority ordering; for each of the
occupied houses, the existing tenant is moved to the top of the priority ordering, leaving the
relative ordering of the others the same. The TTC algorithm applied to the given preference
profile along with this (random) priority profile finds the same assignment as the one found
by the RP mechanism described by Adbulkadiroglu and Sönmez [4]. The PRP mechanism
works in a similar manner, except that priorities are drawn uniformly and independently
for each house: for each new house, the priority orderings are drawn uniformly at random
from the set of all permutations of all agents; for each occupied house, the owner of that
house appears first in the ordering, and a random priority ordering of the remaining agents
is drawn uniformly. The proof of the equivalence of these two mechanisms is very similar to
that of Theorem 2 and is omitted. As in the statement of that Theorem, the results extend
to situations in which houses are partitioned arbitrarily, with the caveat that whenever
multiple occupied houses belong to the same block in the partition, the owners of these
occupied houses are given top priority at the houses they occupy (the relative ordering of
the other agents will be the same for all the houses in the partition).


Acknowledgments
We are grateful to various seminar participants and anonymous referees for comments.
Pathak is indebted to Susan Athey, Drew Fudenberg, Alvin E. Roth and Tayfun Sönmez.
Sethuraman is grateful to Thiam Lee and Hervé Moulin for many insightful discussions


                                                19
during the course of this research: It was an early conversation with Thiam Lee that led to
a formulation of the PRP mechanism and Hervé Moulin suggested thinking about the PRE
mechanism. We thank Stergios Athanassoglou and Yeon-Koo Che for detailed comments
on an earlier draft of the paper.


References
 [1] A. Abdulkadiroğlu, P. A. Pathak, and A. E. Roth, “The New York City high school
    match,” American Economic Review, Papers and Proceedings, 95, 364–367, 2005.

 [2] A. Abdulkadiroğlu, P. A. Pathak, A. E. Roth, and T. Sönmez, “The Boston Public
    school match,” American Economic Review, Papers and Proceedings, 95, 368–371,
    2005.

 [3] A. Abdulkadiroğlu, P. A. Pathak, and A. E. Roth, “Strategyproofness versus efficiency
    in matching with indifferences: redesigning the New York City high school match,”
    American Economic Review, 99, 1954-1978., 2009.

 [4] A. Abdulkadiroğlu and T.Sönmez, “Random serial dictatorship and the core from ran-
    dom endowments in house allocation problems”, Econometrica, 66(3):689–701, 1998.

 [5] A. Abdulkadiroğlu and T.Sönmez, “School choice: A mechanism design approach”,
    American Economic Review, 93(3):729–747, 2003.

 [6] M. Balinski and T. Sönmez, “A tale of two mechanisms: student placement,” Journal
    of Economic Theory, 84: 73–94, 1999.

 [7] B. Chen, “Random Endowment and Inheritance Rules for the House Allocation Prob-
    lem,” Southern Methodist University, Working Paper, 2007.

 [8] Y. S. Chiu and W. Weng, “Endogenous preferential treatment in centralized admis-
    sions,” Rand Journal of Economics, 40(2), 258–282, 2009.

 [9] J. Coldron, E. Tanner, S. Finch, L. Shipton, C. Wolstenholme, B. Willis, S. Demack
    and B. Stiell, “Secondary school admissions,” UK Department for Children, Schools,
    and Families, Research Report 020.

                                            20
[10] H. Ergin and T. Sönmez, “Games of School Choice under the Boston mechanism,”
    Journal of Public Economics, 90, 215–237.

[11] A. Erdil and H. Ergin, “What’s the matter with tie-breaking? Improving Efficiency in
    School Choice,” American Economic Review, 98(3):669–689, 2008.

[12] O. Kesten, “School choice with consent,” Quarterly Journal of Economics, forthcom-
    ing.

[13] D. E. Knuth, “An exact analysis of stable allocation,” Journal of Algorithms,
    20(2):431–442, 1996.

[14] V. Lavy, “Effects of Free Choice among Public Schools,” Review of Economic Studies,
    forthcoming.

[15] S. Papai, “Strategyproof Assignment by Hierarchical Exchange,” Econometrica, 68(6),
    1403–1434, 2000.

[16] P. A. Pathak, “Essays on Real-Life Allocation Problems.” PhD thesis, Economics
    Department Harvard University, 2007.

[17] P. A. Pathak, “Lotteries in Student Assignment: The Equivalence of Queueing and a
    Market-Based Approach,” Working Paper, 2008.

[18] P. A. Pathak and T. Sönmez, “Leveling the Playing Field: Sincere and Sophisticated
    Players in the Boston Mechanism,” American Economic Review, 98, 1636–1652, 2008.

[19] A. E. Roth and M. O. Sotomayor, Two-sided Matching: A Study in Game-theoretic
    Modeling and Analysis. Econometric society monographs, Cambridge, 1992.

[20] L. Shapley and H. Scarf, “On cores and indivisibility,” Journal of Mathematical Eco-
    nomics, 1, 23–28, 1974.

[21] J. Sethuraman, “An Equivalence result in School Choice,” Working paper, Columbia
    University, 2009.

[22] L-G. Svensson and B. Larsen, “Strategy-Proofness, Core, and Sequential Trade,” Re-
    view of Economic Design, 9, 167–190.

                                           21
[23] T. Sönmez and M. U. Ünver, “House Allocation with Existing Tenants: An Equiva-
    lence,” Games and Economic Behavior, 52(1):153–185, 2005.

[24] R. P. Stanley, Enumerative Combinatorics, Volume 1, Cambridge University Press,
    1997.




                                         22
