                                  NBER WORKING PAPER SERIES




                    RE-ASSESSING THE U.S. QUALITY ADJUSTMENT
                              TO COMPUTER PRICES:
                 THE ROLE OF DURABILITY AND CHANGING SOFTWARE

                                           Robert C. Feenstra
                                          Christopher R. Knittel

                                          Working Paper 10857
                                  http://www.nber.org/papers/w10857


                       NATIONAL BUREAU OF ECONOMIC RESEARCH
                                1050 Massachusetts Avenue
                                  Cambridge, MA 02138
                                      October 2004




Prepared for the CRIW conference “Index Theory & Measurement of Price and Productivity,” June 28-29,
2004, Vancouver, B.C. We thank Bert Balk and the participants of the CRIW conference for helpful
comments. We thank Roger Butters and Konstantinos Metaxoglou for research assistance. We benefitted
greatly from discussions with Lanier Benkard at an early stage of the research, who also provided data, for
which we are grateful. The views expressed herein are those of the author(s) and not necessarily those of the
National Bureau of Economic Research.

©2004 by Robert C. Feenstra and Christopher R. Knittel. All rights reserved. Short sections of text, not to
exceed two paragraphs, may be quoted without explicit permission provided that full credit, including ©
notice, is given to the source.
Re-Assessing the U.S. Quality Adjustment to Computer Prices: The Role of Durability and
Changing Software
Robert C. Feenstra and Christopher R. Knittel
NBER Working Paper No. 10857
October 2004
JEL No. D2, E3, L6

                                             ABSTRACT

In the second-half of the 1990s, the positive impact of information technology on productivity

growth for the United States became apparent. The measurement of this productivity improvement

depends on hedonic procedures adopted by the Bureau of Labor Statistics (BLS) and Bureau of

Economic Analysis (BEA). In this paper we suggest a new reason why conventional hedonic

methods may overstate the price decline of personal computers. We model computers as a durable

good and suppose that software changes over time, which influences the efficiency of a computer.

Anticipating future increases in software, purchasers may "overbuy" characteristics, in the sense that

the purchased bundle of characteristics is not fully utilized in the first months or year that a computer

is owned. In this case, we argue that hedonic procedures do not provide valid bounds on the true

price of computer services at the time the machine is purchased with the concurrent level of

software. To assess these theoretical results we estimate the model and find that before 2000 the

hedonic price index constructed with BLS methods overstates the fall in computer prices. After

2000, however, the BLS hedonic index falls more slowly, reflecting the reduced marginal cost of

acquiring (and therefore marginal benefit to users) of characteristics such as RAM, hard disk space

or speed.

Robert C. Feenstra                                      Christopher R. Knittel
Department of Economics                                 Department of Economics
University of California                                University of California
Davis, CA 95616                                         Davis, CA 95616
and NBER                                                and NBER
rcfeenstra@ucdavis.edu                                  crknittel@ucdavis.edu
1. Introduction

         In the second-half of the 1990s, the positive impact of information technology (IT) on

productivity growth for the United States became apparent (Jorgenson and Stiroh, 2000, Oliner

and Sichel, 2000). The measurement of this productivity improvement depends on hedonic

procedures adopted by the Bureau of Labor Statistics (BLS) and Bureau of Economic Analysis

(BEA). These procedures include the hedonic adjustment of prices for mainframes and

peripherals since 1985 (Cole et al, 1986, Cartwright and Smith, 1988), for personal computers

(PC’s) since 1991 (Holdway, 2001), and for semiconductors since 1996 (Grimm, 1998).1 The

rapid price declines of these products means that their production and use accounts for a sizable

portion of recent U.S. productivity gains.

         It is sometimes suggested that the price declines in IT products may be overstated due to

the use of hedonic techniques, though this belief has not been confirmed. Triplett (1999), for

example, critiques a number of suggested reasons why the hedonic techniques might overstate

the price decline of IT products, but he generally finds that these reasons are not persuasive.

Empirically, Landefeld and Grimm (2000) show that the hedonic adjustments used in official

statistics closely match those recommended by academic studies, such as Berndt and Rappaport

(2001), so there is no presumption of a downward bias in the official calculations. But concern

about this potential bias will no doubt continue.2

         In this paper we suggest a new reason why conventional hedonic methods may overstate

the price decline of personal computers, which are treated here as a durable good. We suppose



1
   See Moulton (2001) who details the use of hedonic methods in U.S. statistical agencies.
2
   For semiconductors, Aizcorbe (2004) argues that falling price-cost margins by selling firms may accentuate the
price decline. Gordon (2000) presents a different reason why the TFP contribution of IT capital may be overstated.
He argues that the increase in TFP during the second-half of the 1990s is a cyclical rather than trend increase, and by
focusing only on the trend, the contribution of IT capital to productivity is smaller. Conversely, Benkard and Bajari
(2003) argue that standard hedonic index can be upward biased due to unobserved characteristics.
                                                       2


that software changes over time, which influences the efficiency of a computer. Anticipating the

future increases in software, purchasers may “overbuy” characteristics, in the sense that the

purchased bundle of characteristics is not fully utilized in the first months or year that a computer

is owned. Forward looking buyers will equate the marginal benefits of characteristics over the

lifetime of a machine to the marginal cost at the time of purchase. This means that the marginal

costs are equated to marginal benefits evaluated at future levels of software. In this case, we

argue that hedonic procedures do not provide valid bounds on the true price of computer services

at the time the machine is purchased with the concurrent level of software.

        There are two ways that this concern might influence calculations of total factor

productivity (TFP). Following Oliner and Sichel (2000), let us make the distinction between the

use of IT capital and the production of IT capital. The use of IT capital will influence TFP

calculations through the measurement of the IT capital stock. This will require depreciation rates

for computer equipment, and if changes in software influences the efficiency of a machine then

depreciation rates should reflect this. We do not attempt to solve that problem here, though our

framework could likely be adapted to address it.3 Rather, we focus on the production of IT

capital, and in particular, on the hedonic price index constructed for personal computers, as in

Holdway (2001). This hedonic index can be used to construct dual TFP for personal computers,

i.e. as the difference between weighted growth in factor prices within that sector and the growth

in the hedonic output price. If the hedonic output price is intended to reflect the efficiency of

new machines to users at the current level of software, then we argue that conventional hedonic

methods may well overstate this price decline.



3
  Overviews of the measurement of capital and depreciation rates are provided by Diewert (1980), Harper, Berndt
and Wood (1989), and Hulten (1990), though only Diewert (1980, pp. 503-506) includes a discussion of hedonics.
Specific discussion of depreciation for computers is in Oliner (1993) and Harper (2001).
                                                 3


       We begin the analysis in section 2 by describing a case where the conventional hedonic

adjustment provides a valid measure for the true services price of computers, similar to Rosen

(1974) or Pakes (2003), though we allow for purchases of multiple units. In that section, it is

assumed that the computers being purchased are nondurable. In section 3 we analyze the case

where computers are durable and software is changing over time. We find that conventional

hedonic methods do not provide valid bounds to the true price of computer services (evaluated

with current levels of software). The extent to which the true services price deviates from the

conventional hedonic index will depend on the interaction between software and characteristics

in the services that buyers’ obtain from the machine. If software and characteristics are

complements, in the sense that anticipated increases in software will lead the buyer to purchase

more characteristics today, then it is more likely that the conventional hedonic methods will

overstate the true price decline.

       To assess these theoretical results, in sections 4 and 5 we estimate the model in a two-

step procedure. First, monthly hedonic regressions are run over a sample of desktop PC’s, from

August 1997 to September 2001. Second, we utilize a dataset of all purchases of PC’s at the

University of California, Davis over similar dates. In the second step, the estimated hedonic

coefficients are regressed on the characteristics actually purchased each month and a weighted

average of software quality over the lifetime of the machine. The coefficients obtained in this

second step reveal the users’ “production functions” by which characteristics and software are

transformed into computer services. Therefore, we can use these coefficients to obtain the true

services price for users, and compare this with the bounds obtained from conventional hedonic

methods.
                                                  4


       It turns out that our results differ in the first and second-halves of our sample. Before

2000, we generally find that the hedonic price index constructed with BLS methods overstates

the fall in computer prices, as compared to the true price index constructed using the estimated

production functions for users. This accords with our theoretical results. Furthermore, we find

that the true services price falls faster when it is evaluated with future rather than current levels

of software. This corresponds to our intuition that characteristics may be overbought, so their

value with current software is less than with future software, and the true price index with

current software is above the price index with future software.

       After 2000, however, the BLS hedonic index falls more slowly, reflecting the reduced

marginal cost of acquiring (and therefore marginal benefit to users) of characteristics such as

RAM, hard disk space or speed. Depending on the starting month, by the end of 2001 it turns

out that the BLS index matches quite closely the true production function index constructed with

current software. In this sense, the overstatement of the price decline by BLS methods has been

ameliorated in recent years. The production function index constructed with future software falls

faster than either of the other two indexes, however, which is explained by the forthcoming

release of Windows XP and 2003, with its large hardware requirements. Additional conclusions

are provided in section 6.


2. Buyer’s Problem With Nondurable Capital

       In his classic treatment, Rosen (1974) considers the problem of buyers and sellers who

purchase and produce differentiated goods. Under his assumptions (perfect competition and

many varieties) this results in an equilibrium price schedule pt = ht(xt), where x t ∈ R M is the

vector of characteristics and pt is the price in period t. We will take this price schedule as given

and re-examine the buyer’s problem, introducing one important difference from Rosen: we shall
                                                            5

allow the buyer to purchase multiple units of the differentiated good, i.e. multiple computers.

The reason for allowing this will become clear shortly. Since this assumption is more realistic

for firms than for consumers, we will use that language to describe our model, but much the

same results would hold for a consumer purchasing multiple units.

         In addition to computers, the firm uses other inputs denoted by the vector yt. The

services obtained in year t = 1,…,T from a computer of characteristics with xt is f(xt,st), where

the vector st denotes the state of software. We will sometimes refer to f(xt,st) as the “production

function” for the firm, and it shows how computer characteristics and software combine to create

computing services. Treating the computer as a non-durable good, the firm purchases nt

identical units in year t, and new machines the next year.4 The computers, purchased along with

other inputs yt, yields per-period revenue G[yt, ntf(xt,st)] for the firm. Then the maximization

problem is to choose nt, xt and yt to:

                              max
                                          G[yt, ntf(xt,st)] – ntht(xt) – qtyt ,                            (1)
                           n t ,x t ,yt



where pt = ht(xt) is the price of a computer and qt is the price of the other inputs yt.

        We will let Kt ≡ ntf(xt,st) denote the capital stock of computers, measured in efficiency

units. To compare our results with Rosen and other authors, suppose first that the number of

computers purchased nt cannot be varied (for example, nt = 1). Then the first order conditions

for problem (1) are:

                          Gy[yt, ntf(xt,st)] = qt ,                                                        (2)

                          GK[yt, ntf(xt,st)] ntfx(xt,st) = nt ht’(xt) ,                                    (3)


4
   We could generalize the problem to allow the firm to choose several type of computers, each in multiple units, by
giving it several service functions f(xt,st), e.g. for desktops, laptops, etc.
                                                        6


where ht’(xt) denotes the vector of derivatives (∂ht/∂x1t,…, ∂ht/∂xMt) for the M characteristics.

Canceling nt from the left and right-hand side of (3), the first-order condition is interpreted as the

marginal benefit of each characteristic (GKfx) equaling its marginal cost (ht’). A difficulty that

arises is that the marginal benefit depends on the quantity of other inputs purchased via

GK[yt, ntf(xt,st)], or implicitly, on their prices qt. This complicates the empirical application of

hedonic methods, and several approaches have been taken to simplify the problem.

        First, we could suppose that the revenue function is additively separable, so that

G[yt, ntf(xt,st)] = g(yt) + ntf(xt,st). In that case, the maximization of firm profits in (1) implies the

sub-problem of choosing choose characteristics xt to:

                                max
                                      f(xt,st) – ht(xt) ,                                        (4)
                                 xt



for which the first-order condition is simply fx(xt,st) = ht’(xt). This formulation of the problem is

implicitly used by Pakes (2003), for example. Second, we could reformulate the buyer’s

problem in terms of its dual, and carry along the prices qt of the other goods in the first-order

conditions. Diewert (2003) takes this approach and shows how an aggregate of the prices qt

affects the hedonic price surface.

        Third, the approach we shall take is to allow the firm to optimally choose the number of

computers nt. This implies the additional first-order condition:

                                GK[yt, ntf(xt,st)] f(xt,st) = ht(xt) .                           (5)

Combining (3) and (5) we readily obtain:

                                         h t ' (x t ) f x (x t , s t )
                                                     =                 .                         (6)
                                         h t (x t ) f (x t , s t )
                                                         7

This shows the equality of the marginal price of characteristics with their marginal value to the

user when the number of units are also chosen. It is analogous to the first-order condition

derived by Rosen (1974), and has the benefit that the price or quantity of other goods purchased

do not appear.

        The simplicity of the first-order condition (6) will be useful empirically, but also allows a

reformulation of the theoretical problem. Again letting Kt ≡ ntf(xt,st) denote the capital stock of

computers, so that nt = Kt/f(xt,st), problem (1) can be re-written as:


                            max                           ⎛ h (x ) ⎞
                                         G(yt, Kt) – K t ⎜⎜ t t ⎟⎟ – qtyt .                        (1')
                         K t ,x t ,y t
                                                          ⎝ f (x t , st ) ⎠


For the choice of characteristics xt, it is evident that to maximize (1’), the buyer must solve the

sub-problem:
                                              min    h t (x t )
                                                                  .                                (7)
                                               xt   f (x t , st )


Notice the difference between this sub-problem and that in (4): both are correct, but are obtained

under slightly different assumptions. The formulation in (1’) and (7) makes it clear that the price

of computer services is pt/f(xt,st) = ht(xt)/f(xt,st), that is, the ratio of the nominal price to benefits

rather than their difference in (4). We will presume that the goal of a price index is to measure

the change over time in the “true” services price pt/f(xt,st).

        The first-order conditions for (7) are just (6), and the simple statement of the problem

also allows the second-order conditions to be easily examined. Minimizing (7) is equivalent to

minimizing its natural log, and a sufficient second-order condition for a local minimum are:
                                                            8


                   ⎡ ∂ 2 ln h t ( x t ) ∂ 2 ln f ( x t , s t ) ⎤
                   ⎢          2
                                       −           2           ⎥ is positive definite around xt .              (8)
                   ⎣      ∂ x t               ∂ x  t           ⎦


Consider the case where the price function for computers, ht(xt), takes on the semi-log form,

ln p t = ln h t ( x t ) = α t + β t ' x t . Then (8) is satisfied if and only if ln f ( x t , s t ) is concave in a

neighborhood around xt. We state a slightly stronger version of this second-order condition as

one possible assumption:


Assumption 1
(a) ht(xt) is semi-log in xt , ln p t = ln h t ( x t ) = α t + β t ' x t , t = 1,…,T;

(b) ln f ( x , s) is concave in x in an open convex region that includes (xt,st), t = 1,…,T, where the

characteristics and software are non-decreasing over time, (xt-1,st-1) < (xt,st).


The assumption that (xt-1,st-1) < (xt,st) in part (b) is made for notational convenience, and could be

weakened. Note that by letting xt = ln zt for underlying characteristics zt, then Assumption 1 can

also be used for the log-log hedonic price function.

         Clearly, parts (a) and (b) of Assumption 1 go together: with other assumptions on the

functional form of the hedonic regression ht(xt), there would be alternative properties for f(xt, st)

implied by the second-order conditions. For example, suppose that we treated ht(xt) as linear in

xt rather than semi-log. By twice differentiating (1) with respect to xt, it is easy to show that the

second-order condition is satisfied if G(yt, Kt) is concave in Kt and f(xt, st) is concave in xt. We

state this as an alternative assumption:
                                                                    9


Assumption 2
(a) ht(xt) is linear in xt , p t = h t ( x t ) = α t + β t ' x t , t = 1,…,T;

(b) f ( x , s) is concave in x in an open convex region that includes (xt,st), t=1,…,T, where the

characteristics and software are non-decreasing over time, (xt-1,st-1) < (xt,st).


The BLS actually uses a linear hedonic regression (Holdway, 2001), but we will derive results

that hold under either Assumptions 1 or 2.

         The BLS makes a hedonic adjustment to computer prices to deflate the output of the

computer sector within the producer price index. This price index then becomes an input price to

sectors using computers, where we expect the hedonically-adjusted price index to reflect the cost

of services obtained. To describe this in terms of problem (1’), the “true” price of computer

services is pt/f(xt,st), or the nominal price deflated by the services obtained from a machine. Let

P0(pt-1, pt, xt-1, xt) and P1(pt-1, pt, xt-1, xt) denote two alternative measures of a constant-quality

price ratio for a computer model between years t-1 and t, i.e. with constant characteristics. We

wish to use these measures to obtain bounds on the true services price pt/f(xt,st), such that:


                                                                    p t /f(x t , s t )
                            P 0 ( p t −1 , p t , x t −1 , x t ) >                                 (9a)
                                                                    p t -1 /f(x t -1 , s t )
and,
                                                                    p t /f(x t , s t -1 )
                            P1 ( p t −1 , p t , x t −1 , x t ) <                                  (9b)
                                                                    p t -1 /f(x t -1 , s t -1 )


The right side of (9) is the ratio of the price of computers services, but measured at a constant

level of software (st or st-1). If the inequalities in (9) hold, then we have obtained bounds on the

change in the true services price, using the constant-quality price ratios P0 and P1. Provided that

these bounds are similar, then we conclude that the use of either one provides a good measure of

the change in the services price for that computer.
                                                            10

        In practice, BLS constructs the producer price index for personal computers as follows

(Holdway, 2001). Let p t = h t ( x t ) = α t + β t ' x t denote the linear hedonic regression, t=1,…,T.

Then ht(xt-1) = pt – βt’(xt–xt-1) measures the price in year t minus an adjustment for the changed

characteristics between the two years. Triplett (1986) refers to this as making an “explicit

hedonic adjustment” to the period t price. The ratio of prices in year t and t-1 with constant

characteristics is:

                                           h t ( x t −1 ) [p t − β t ' ( x t − x t −1 )]
                P0(pt-1, pt, xt-1, xt) ≡                 =                               .           (10a)
                                              p t −1                  p t −1


While (10) is the method used by BLS, it is straightforward to consider alternative ways to make

the hedonic adjustment. In particular, rather than adjusting the period t price in (10a), we could

instead adjust the period t-1 price, obtaining:


                                                pt                        pt
                P1(pt-1, pt, xt-1, xt) ≡                 =                                     .     (10b)
                                           h t −1 ( x t ) [p t −1 + β t −1 ' ( x t − x t −1 )]


We would expect the indexes P0 and P1 to be quite close in practice, provided that the price

surface ht(xt) is not changing too rapidly over time.

        The particular form for the hedonic correction used in (10) depends on the functional

form of ht(xt). If instead we suppose that ln p t = ln h t ( x t ) = α t + β t ' x t is semi-log, t = 1,…,T,

then the constant-quality price ratios are:

                                           h t ( x t −1 ) p t exp[−β t ' ( x t − x t −1 )]
                P0(pt-1, pt, xt-1, xt) ≡                 =                                 ,         (11a)
                                              p t −1                p t −1
and,
                                                pt                        pt
                P1(pt-1, pt, xt-1, xt) ≡                 =                                      .    (11b)
                                           h t −1 ( x t ) p t −1 exp[β t −1 ' ( x t − x t −1 )]
                                                          11

Following Berndt and Rappaport (2001, p. 270), we define the hedonic Laspeyres and Paasche

prices indexes, respectively, as (11a) and (11b) evaluated using the mean value of characteristics

over the models available each period. The mean value of characteristics are also used to

evaluate the expected prices, p t ≡ h t ( x t ), t = 1,…,T. Notice that the hedonic Laspeyres index is

then P 0 = h t ( x t −1 ) / h t −1 ( x t −1 ) , which uses last-period characteristics, while the hedonic Paasche

index is P1 = h t ( x t ) / h t −1 ( x t ) , which uses present-period characteristics.5

         We will use (11) as the constant-quality price ratio corresponding to Assumption 1, and

those in (10) for Assumption 2. The question is whether either of these provide valid bounds to

the true price of computer services. The following result shows that this is indeed the case.



Proposition 1

Suppose that characteristics are chosen optimally as in (6). Then under Assumption 1 (or 2), the

constant-quality price ratios defined in (10) (or 11, respectively) provide bounds to the change in

the true price of computers services, so that (9) is satisfied.



         The proof of Proposition 1 is in the Appendix, and follows from exploiting the concavity

of f(xt, st) or ln f ( x t , s t ) . Proposition 1 gives us some confidence in the hedonic adjustment

made by BLS, but it obtained by ignoring issues of dynamics. The durability of computers,

along with changing software, is introduced in the next section.




5
   Of course, the usual Laspeyres and Paasche price indexes use last-period and present-period quantity weights,
respectively. We will not have the quantities available in our dataset, so our definition of there terms in the hedonic
context refers to the use of last-period and present-period characteristics. Feenstra (1995) argues that the Laspeyres
and Paasche hedonic indexes provides bounds on the change in consumer welfare, analogous to Proposition 1.
                                                                    12


3. Dynamic Problem With Changing Software

       We now suppose that a computer purchased lasts for a number of periods. The services

received in period t for a computer purchased in t-τ with characteristics xt-τ, is f(xt-τ,st). We

adopt the convention that if f(xt-τ,st) ever become negative (i.e. the computer is dysfunctional),

then we redefine the value of this function at zero. The firm will continue to use this computer

so long as f(xt-τ,st) > 0. Let T be the longest period that any computer is held. Then the buyer

solves the dynamic problem:

                                  ∞
                                  ∑ β t-T G[y t , ∑τ=0
                   max                                 T
                                                            n t-τ f(x t-τ , s t )] − n t h t (x t ) − q t y t ,                (12)
                y t , n t ,x t
                                  t=T




                                                                                ∑τ=0 n t-τ f(x t-τ , s t )
                                                                                    T
where pt = ht(xt) is again the price of a computer, Kt ≡                                                      is the capital stock

measured in efficiency units, and the values of nt and xt for t < T are taken as given. Note that

for simplicity we have treated the future state of software st as known with perfect foresight.

       The first-order conditions for (12) are:

                                 Gy(yt, Kt) = qt ,                                                                             (13a)

                                 ∑τ=0 β τ G K (y t +τ , K t +τ )f(x t , s t +τ ) = ht(xt) ,
                                    T
                                                                                                                               (13b)


                                 ∑τ=0 β τ G K (y t+τ , K t+τ )n t f x (x t , s t +τ ) = nt ht’(xt) ,
                                    T
                                                                                                                               (13c)


Dividing (13c) by (13b), we obtain:



                                 ∑τ=0 β τG K (y t+τ , K t+τ )f x (x t , s t +τ )
                                      T
                                                                                        h t ' (x t )
                                                                                    =                                          (14)
                                 ∑τ=0 β τ G K (y t +τ , K t +τ )f(x t , s t +τ )
                                   T                                                    h t (x t )
                                                                    13

as the first-order condition that defines the choice of characteristics xt for the computer(s)

purchased in period t.

         This first-order condition is forward looking, in that the firm will be evaluating the

marginal productivity of characteristics over the lifetime of the machine. To make this explicit,

note that (14) can be rewritten as:

                                        T           f x (x t , s t + τ ) h t ' ( x t )
                                        ∑ θ t ,τ     f(x t , s t + τ )
                                                                        =
                                                                          h t (x t )
                                                                                                             (15a)
                                       τ=0


                                   β τ G K (y t + τ , K t + τ )f(x t , s t + τ )                T
with the weights, θ t ,τ ≡                                                          , where    ∑ θτ,t = 1.   (15b)
                               ∑τ=0 β τG K (y t +τ , K t +τ )f(x t , s t +τ )
                                   T
                                                                                               τ=0




         To simplify this first-order condition, it is convenient to adopt a specific functional form

for the production function f(xt, st). In particular, we shall adopt the translog form:


                 ln f l ( x t , s t ) = a l ' x t + 12 x t ' Ax t + b' s t + 12 s t ' Bs t + x t ' Γs t ,    (16)


where l = 1,..., L denotes different buyers. The parameters (A, b, B, Γ) are constant across

buyers, while we allow the marginal benefits to vary across users by the coefficients a l . To

satisfy Assumption 1(b) the matrix A must be negative semi-definite, and we shall consider some

restrictions on the matrix Γ below.

         Notice that the marginal value of characteristics, f xl / f l , is linear in the software st. It

follows that by substituting (16) into (15), we can re-write the first-order condition as:

                                        f xl ( x t , ~st ) h t ' ( x t )
                                                          =              ,                                   (17a)
                                        f l ( x t , ~st ) h t ( x t )

                                                T
                                       ~s ≡
where,                                   t     ∑ θ t ,τ s t + τ .                                            (17b)
                                               τ= 0
                                                                  14



That is, the marginal value of characteristics, evaluated with the average future state of software
~s , equals the marginal cost of characteristics today. This first-order condition (17) takes the
  t


place of (9), as obtained with a nondurable computer, and shows that the characteristics xt chosen

at time t are optimal for the future state of software ~st .

        Turning to the hedonic adjustment of computer prices, we continue to assume that the

goal of the constant-quality price ratios P0(pt-1, pt, xt-1, xt) and P1(pt-1, pt, xt-1, xt) is to satisfy the

inequalities in (9). However, now we need to ask: at what level of software are the efficiency of

the new and old computers compared? In (9), we considered the software available at either st-1

or st. In the dynamic model, however, the characteristics chosen in (17) are optimal for the

future level of software ~st . This can be expected to impact the form of the inequalities in (9), as

is confirmed by the following result:


Proposition 2

Suppose that computer services are given by the translog function (16) and characteristics are

chosen optimally as in (17). Then under Assumption 1 (or 2), the constant-quality price ratios

defined in (10) (or 11, respectively) provide the bounds:


                                                                  p t /f l (x t , ~st )
                          P 0 ( p t −1 , p t , x t −1 , x t ) >                         ,             (18a)
                                                                  p /f l (x , ~s )
                                                                     t -1         t -1    t
and,
                                                                  p t /f l (x t , ~st -1 )
                          P1 ( p t −1 , p t , x t −1 , x t ) <                                   .    (18b)
                                                                  p t -1 /f l (x t -1 , ~st -1 )


                                                        0           1
        The constant-quality price ratios P and P appearing on the left of (18) are similar to

current BLS practice, while the expressions on the right of (18) are the true change in the price of
                                                    15

computer services. So this result shows that BLS methods provides valid bound to the true

change in the price of computer services when period t-1 and t machines are both evaluated at

the same average future level of software. It is worth stressing that these bounds (like those in

Proposition 1) are an economic property, and depend on optimizing behavior, i.e. on the first-

order condition (17) as well as the concavity properties in Assumption 1 or 2. In our empirical

work we shall evaluate these bounds by computing the quality-adjusted price ratios on the left of

(18) and estimating the production function f l ( x t , ~st ) that appears on the right. We will find

periods in the sample where the bounds do not hold, which can arise due to non-optimizing

behavior or due to mis-measurement of the production function.

        Setting aside the empirical validity of the bounds in (18), however, there is another

question we can ask about Proposition 2, and that concerns the level of software used to

evaluated true ratio of services price on the right of (18). Suppose that instead of evaluating the

firms’ production functions f l ( x t , ~st ) with future software as in (18), our goal instead is to

evaluate it with current software (st or st-1), as on the right of (9). Thus, when the BLS producer

price index for computers is used to deflate computer input purchases by firms, we are assuming

that the price index accurately reflects cost of purchasing services at the current level of

software. Therefore, we are interested in knowing whether BLS procedures—like the
                                                      0
construction of the constant-quality price ratios P and P1—provide bounds to the true services

price ratio at current levels of software.

        To answer this question, we introduce additional restrictions on the production function

f l ( x t , s t ) . In particular, suppose that characteristics and software are complements in the sense

that ∂ 2 ln f l / ∂x t ∂s t = Γ > 0 . To interpret this condition, note that from the first-order condition
                                                                  16

(9) we have:
                                                                  −1
                                       dx t    ⎡ ∂ 2 ln f ⎤ ⎡ ∂ 2 ln f ⎤     −1
                                            = −⎢      2 ⎥ ⎢            ⎥ = −A Γ .                              (19a)
                                       ds t    ⎣ ∂x t ⎦ ⎣ ∂x t ∂s t ⎦

Assuming that ln f l ( x t , s t ) is strictly concave in xt (slight stronger than Assumption 1b) so that

 -1
A is negative definite, with Γ > 0 we obtain:

                                            dx t
                                       Γ′        = − Γ ′A −1Γ is positive definite.                            (19b)
                                            ds t

Thus, with Γ > 0 increases in software will tend to increase the characteristics (in the sense that

pre-multiplying dxt/dst by the positive matrix Γ yields a positive definite matrix). In this sense,

characteristics and software are complements.

        With this assumption we have the following extension of Proposition 2:


Corollary

If Γ > 0, then the bounds in (18) become:

                                                 p t /f l (x t , ~st )         p t /f l (x t , s t )
                P0(pt-1, pt, xt-1, xt) >                                     <                             ,   (20a)
                                                 p t -1 /f l (x t -1 , ~st )   p t -1 /f l (x t -1 , s t )
and,
                  1                      p t /f l (x t , ~st -1 )         p t /f l (x t , s t -1 )
                P (pt-1, pt, xt-1, xt) <                                <                                .     (20b)
                                         p t -1 /f l (x t -1 , ~st -1 )   p t -1 /f l (x t -1 , s t -1 )


Conversely, if Γ < 0 then the second inequalities appearing in (20a) and (20b) are reversed.



        The first inequalities appearing in (20) are identical to those in (18), of course, so the new

results in the Corollary are the second inequalities. From (20), it is evident that BLS procedures

do not provide bounds to the true services price ratio evaluated at the current (period t-1 or t)
                                                                                                       0
fixed level of software. When Γ > 0, the constant-quality price ratio P on the left of (20a) is no
                                                         17

longer an upper bound for the change in the price of services on the right. While the price ratio
    1
P on the left of (20b) is a lower bound for the change in the price of services, there is nothing

that guarantees that this bound will be tight: it could be significantly less than the true change in

the prices of computer services. When Γ < 0 then the second inequalities in (20) are reversed,

but with mixed signs within Γ we will generally have to evaluate the production functions

f l ( x t , ~st ) and f l ( x t , s t ) to know how the true ratio of services price compares at the future and

current levels of software.6
                                                                                                                0
            As noted in the previous section, when we evaluate the quality-adjusted price ratios P

        1
and P at the mean level of characteristics each year (and corresponding expected price), we

obtain the hedonic Laspeyres and Paasche indexes, respectively. These are the bounds on the

left of (20), and the Laspeyres index is currently constructed by the BLS. Likewise, we can

evaluate the production functions appearing in (20) at the mean level of characteristics each year

to obtain indexes of the true price of computer services. As in (20) these indexes can be

constructed with either future levels of software (~st−1 or ~st ) or current levels of software (st-1 or

st. The precise construction of these indexes is discussed in the next section.


4. Measurement of Computer Price Indexes

            Our interest is in estimating Γ and other parameters of the translog services function (16),

and use these to construct the true price ratio of computer services, measured with constant

software st-1 or st as on the right of (20). These time-series of true services prices can then be

                                                        0        1
compared to the constant-quality price ratios P and P in (11). If there is a significant difference

6
   Note that the second inequalities appearing in (20) are numerical rather than economic properties: once the sign
pattern of Γ is established by estimation, if it has mostly positive elements then the true price index with current
software should exceed that with future software.
                                                                 18

between the change in the true price ratio and these constant-quality price ratios, this will

indicate the potential bias in current BLS procedures.

          The estimation will rely on a two-step procedure. In the first step we estimate

conventional hedonic regressions on desktop PC’s from monthly data. The data are from the PC

Data Retail Hardware Monthly Report and report quantities, average monthly prices and a

number of machine characteristics for desktop computers. These data run from August 1997 to

December 1999.7 We augment these data with desktop computer ads from PC Magazine; these

data cover April 1999 to September 2001, but have fewer observations per month. Following

Benkard and Bajari (2003), for each machine in our data, we collected processor benchmark data

from The CPU Scorecard. The benchmark data reduce the complex interaction between a

processors type and speed to a single index measuring performance. In addition to the processor

benchmark, we include the amount of memory, the size of the hard drive and a number of

indicator variables in the hedonic regressions. These indicator variables are: whether the

computer has a CD player, sound card, Zip drive, network card, LCD monitor and whether it has

SCSI hard drives. In addition, we treat the computer’s factory installed operating system as a

characteristic in the hedonic regressions. The summary statistics for prices and computer

characteristics are reported in Table 1, while Table 2 reports the correlation matrix for the

variables.

          We estimate the semi-log form:

                           ln p it = α t + β t ' x it + ε it ,        i = 1,…,N; t = 1,…,T,     (21)


where i = 1,…,N denotes individual personal computers (not necessarily available each period),

and t = 1,…,T denotes months from August 1997 to September 2001. Using these monthly


7
    We thank Lanier Benkard for providing these data.
                                                                19

hedonic regressions, we construct the change in constant-quality prices from (11) as:


                           ln Pi0 = ln p it − ln p it−1 − βˆ t ' ( x it − x it −1 ) ,                     (22a)

                           ln Pi1 = ln p it − ln p it −1 − βˆ t −1 ' ( x it − x it −1 ) .                 (22b)


        As discussed in section 3, we follow Berndt and Rappaport (2001, p. 270) and construct

the hedonic Laspeyres and Paasche price indexes by evaluating (22a) and (22b) using the mean

value of characteristics over the models available each period, x t−1 and x t , and the prices

ln p t ≡ αˆ t + βˆ t ' x t , t = 1,…,T. Substituting these into (22), we obtain:


        Change in hedonic Laspeyres index = [αˆ t − αˆ t −1 + (βˆ t − βˆ t −1 )' x t −1 ] ,               (23a)

        Change in hedonic Paasche index = [αˆ t − αˆ t −1 + (βˆ t − βˆ t −1 )' x t ] .                    (23b)


The average of these is:

        Change in hedonic Fisher index = [αˆ t − αˆ t −1 + 12 (βˆ t − βˆ t −1 )' ( x t + x t −1 )] .      (24)


These log changes can be cumulated to obtain the levels of each index.

        In the second-step, we make use of actual purchases of desktop PC’s by each academic or

administrative department at the University of California, Davis, which we index by l = 1,..., L .

These data cover July 1997 through September of 2001 and report the machine characteristics for

all purchases by each academic and administrative department. Table 3 reports the summary

statistics for these data.8 The UC Davis data is used to estimate the parameters of the translog

production function (16), by using the first-order condition (17). Using (16) and (21), the (17)


8
   We do not use the purchase price for the UC Davis dataset because it includes peripheral equipment, but we
report this price in Table 3 for completeness.
                                                                         20

becomes:

                                                   T
                      βˆ t = a l + Ax ilt + ∑ θ t ,τ Γs t + τ + u it , i = 1,…,N; l = 1,…,L; t = 1,…,T.             (25)
                                                 τ=0



In this notation, x ilt denotes a computer of type i purchased by department l in month t. Notice

that (25) is a vector of equations, one for each characteristic. From (16b), the weights θ t , τ sum

to unity over τ = 0,1,.., T , where T is the numbers of periods that a machine purchased at time t

is used. For simplicity in the estimation we set T at 3 years.

          Having obtained the estimates of A and Γ from (25), we can use these to construct the

true change in computer services price, using the software at date t-1:

                         ⎡ p it /f l (x it , s t-1 ) ⎤
                      ln ⎢           l                ⎥
                         ⎣ p it-1/f (x it-1 , s t-1 ) ⎦

                      = ln p it − (â l ' x it + 12 x it ' Âx it + x it ' Γˆ s t −1 )
                                                                                                                    (26)
                                  − ln p it −1 + (â l ' x it −1 + 12 x it−1 ' Âx it −1 + x it −1 ' Γˆ s t −1 ),


which follows from (16). To simplify (26), we can use the Quadratic Identity of Diewert (1978,

pp. 118), which states that the difference between the quadratic functions ln f l ( x it , s it −1 ) and

ln f l ( x it −1 , s it−1 ) equals:
                                                                                         ′
                l                         l                     1 ⎡ ∂ ln f l ∂ ln f l ⎤
           ln f ( x it , s it −1 ) − ln f ( x it −1 , s it−1 ) = ⎢          +          ⎥ ( x it − x it−1 ) ,        (27)
                                                                2 ⎣ ∂x it     ∂x it −1 ⎦


where both derivatives are evaluated at sit-1. Let us denote the estimates of these derivatives by:


                      ˆˆ l    1 ⎡ ∂ ln f l ∂ ln f l ⎤
                      β t −1 ≡ ⎢          +         ⎥ = â l + 2 Â( x it + x it −1 ) + Γˆ s it −1 ,
                                                               1                                                    (28)
                              2 ⎣ ∂x it     ∂x it−1 ⎦
                                                                    21

which follows from the definition of the translog function in (16).

         Then substituting (28) and (29) into (26), we can alternatively express the true change in

services price, using the firms’ production functions, as:


                     ⎡ p /f l (x , s ) ⎤                        ˆ
                  ln ⎢ it l it t-1 ⎥ = [ln p it − ln p it −1 − βˆ lt −1 ' ( x it − x it −1 )] .                               (26')
                     ⎣ p it-1/f (x it-1 , s t-1 ) ⎦


This formula applies to a single machine. To obtain an index of the true services price we

evaluate (26') at the mean value of characteristics in each period. We also use these mean

                             ˆ
characteristics to evaluate βˆ lt −1 in (28), and to evaluate the prices ln p t ≡ αˆ t + βˆ t ' x t , also using

the mean a l across departments. This gives us the index of the true change in services price:


          Change in true services price with software st-1
                                                                                  ˆ
                             = [α t + βˆ it ' x t − α t −1 − βˆ it −1 ' x t −1 − βˆ lt −1 ' ( x t − x t −1 )] .               (29)


                                                                         ˆ
Similarly, we can construct the true index using software at date t. Let β̂ lt denote exactly the

same expression as in (28) but using st rather than st-1.9 Then taking the average of (29)

                ˆ           ˆ
evaluated with βˆ lt −1 and β̂ lt , we obtain a Fisher-type true index:


                                                                                         1
          Change in true services price with current software                            2
                                                                                             (s t −1 + s t )

                                                                                     ˆ          ˆ
                             = [α t + βˆ it ' x t − α t −1 − βˆ it−1 ' x t −1 − 12 (βˆ lt −1 + βˆ lt )' ( x t − x t −1 )] .   (30)



         Finally, we can evaluate the firms’ production functions using future software ~st , defined



                         ˆ
9
    Again, we evaluate   β̂ lt at the mean level of characteristics and the mean level of a l across departments.
                                                                  22

                                               ~
in (17b), rather than current software st. Let β tl−1 denote exactly the same expression as in (28)

                                         ~
but using ~st −1 rather than st-1, while β tl uses ~st . Then the Fisher-type true index using the future

levels of software is:


        Change in true services price with future software                          1
                                                                                    2
                                                                                        (~st −1 + ~st )
                                                                                    ~        ~
                            = [α t + βˆ it ' x t − α t −1 − βˆ it −1 ' x t −1 − 12 (β tl−1 + β tl )' ( x t − x t −1 )] .   (31)


        We can compare these true service price indexes, obtained from the firms’ production

functions, to the Laspeyres and Paasche bounds from (23) or the hedonic Fisher index in (24).

Notice that the difference between the change in the true services price using current software in

(30) and the hedonic Fisher index in (24) can be simplified as:



        Change in true services price with current software – hedonic Fisher index
                              N
                                                          ˆ          ˆ
                            = ∑ 12 [(βˆ t −1 + βˆ t ) − (βˆ lt −1 + βˆ lt )]' ( x t − x t −1 ) .                           (32)
                               i =1


                                                                                    ~          ~
Likewise, the difference between (31) and (24) has the same form as (32), but using β t −1 and β t

             ˆ          ˆ
rather than βˆ t −1 and β̂ t . With characteristics growing over time, expression (32) will be positive

                                             ˆ          ˆ
provided that   1
                2
                    (βˆ t −1 + βˆ t ) > 12 (βˆ lt −1 + βˆ lt −1 ) . This condition states that the typically estimated

hedonic coefficients, βˆ t −1and βˆ t , exceed the true value of these characteristics to the user with

                             ˆ            ˆ
software at time t-1 and t, βˆ lt −1 and βˆ lt . This corresponds to our intuition that users may

“overbuy” characteristics such as RAM and hard disk space, because they will become more

valuable at future states of software.
                                                        23


5. Empirical Results

5.1 Hedonic Regressions

         To conserve on space, we do not report each of the coefficients from the monthly hedonic

equations, but Table 4 summarizes the coefficients for the included characteristics. The typical
     2
R from the hedonic regression is roughly 0.60, but ranges from 0.13 to 0.90. It is important to

note that the value of the characteristics captured by indicator variables may not be identified in a

given month, since in some months all of the computers in the sample have or do not have the

given characteristic. In general, the mean coefficient for each of the characteristics is positive.

The exceptions are the indicator variables for whether the computer has a CD or a sound card;

the coefficients associated with these characteristics are quite noisy.

         Figures 1 through 3 track the monthly hedonic coefficients for the processor speed, RAM

and hard drive size variables and provide 95 percent confidence intervals for the point estimates.

We focus on these three characteristics because their coefficients are identified in every month

and they are the main determinants of a computer’s price.10 Each of the coefficients display a

general downward trend as characteristic prices fell during our sample; a regression of the

coefficient on a linear time confirms this and yields negative and significant coefficient for each

of the variables. The processor speed coefficient displays a sharp increase between May 1999

and June 1999. We have verified with cpuscorecard.com that this is not due to a change in the

benchmark definition. In addition, the hard drive coefficient exhibits a sharp decline between

August 1997 and August 1998. Finally, the processor speed and RAM coefficients display a

reduction in precision later in the sample. This is due to smaller sample sizes for the PC




10
  These three variables alone account for, on average, over 80 percent of the explained variation from the hedonic
regressions.
                                                       24

Magazine price data compared to the PC Data Retail Hardware Monthly Report data.11


5.2 Departmental Production Functions

        A key component for the decision process of the consumer or firm is the expected

software quality; admittedly, this is difficult to quantify. We discussed a number of potential

measures of quality with software programmers and settled on the recommended hard drive

space for both Microsoft Windows and Microsoft Word. Increases in software require additional

hard-drive capacity and will be reflected in the recommended hard drive capacities of the

programs.12 This measure displays a general upward trend as both Office and Windows have

added features. As with the dependent variable in the second stage, our software quality

measure exhibits time series variation and is identified from the change in the average

characteristics of purchased computers over time.

        Estimating (25) requires including the expected movements in software quality over the

lifetime of the machine. Rather than modeling the primitives of these expectations, we include

the actual movements of our software quality measure. To capture the uncertainty associated

with these expectations, we assume an artificially high discount rate, 2% per month, in (17b).

This implies that departments place more weight on the expectations of software quality during

the earlier months of a computer’s lifetime. The high discount rate suggests they do so because

there is less uncertainty regarding quality early in the lifetime of the machine.

        We focus on the first order condition (25) for three characteristics: processor speed, hard

drive size and RAM. We estimate the three first order conditions simultaneously via least



11
  In our second stage regressions, we report heteroskedastic consistent standard errors to account for this.
12
  The required memory was also a candidate. However, the programmers that we spoke to were under the
impression that software engineers now “waste” more memory than in previous periods, whereas this is not the case
for hard-drive space. Including the recommended RAM levels does not qualitatively change the results.
                                                             25

squares and impose symmetry in the matrix A of the production function.13 The results from the

second stage regressions are reported in Table 5. The results with respect to the quadratic

portion of the production function (the A matrix) are largely consistent with our economic

intuition. The diagonal elements are negative suggesting decreasing returns to speed, hard drive

capacity and memory. Two of the three off-diagonals are positive, the exception being the cross-

derivative of RAM and hard drive capacity.

            The results with respect to the software measures are somewhat puzzling. Increases in

the hard disk requirements of Microsoft Office tend to increase the marginal product of the

computer characteristics (ΓOffice > 0 in two out of three columns of Table 5). This means that

Office and the hardware characteristics are complements, in the sense that increases in Office

requirements leads to higher purchases of speed, RAM, and hard disk size. In other words,

departments “over purchase” the characteristics in the current period to compensate for future

increases in Office software requirements; this is consistent with our priors. In contrast, the

coefficients associated with Windows hard disk requirements tend to be negative (ΓWindows < 0 in

two out of three columns), which suggests that departments reduce their demand for hardware

characteristics in response to an increase in Windows hard disk requirements.

            One possible explanation for this finding is that departments do not increase the

characteristics of a computer purchase in response to expected changes in Windows, but instead

shorten the time period in which the computer is held. That is, if departments expect increases in

Windows quality in the near future, they reduce the characteristics of the current purchase in

expectation of buying a computer when the new version of Windows was released. This is

consistent with anecdotal evidence that suggests that consumers do not upgrade Windows as


13
     Individual tests on the symmetry of the off-diagonals fail to reject equality.
                                                     26

much as Office, instead implicitly “upgrading” by purchasing a new machine, and that quality

changes of Windows appear to be more discrete than quality changes of Office. Behavior of this

type is outside our model, however, because the time a computer is held is taken as exogenous.

An alternative, statistical explanation for ΓWindows < 0 is that it is capturing the overall negative

trend in the hedonic coefficients, which are the dependent variable in (25).


5.3 Price Indexes

        Given the estimates from the second stage, we calculate five price indexes. The first

three are the hedonic Laspeyres, Paasche and Fisher, in (23)-(24); the fourth is the true services

                              1
price with current software   2
                                  (s t −1 + s t ) , in (28), which we refer to as the “production function,

current software;” and the fifth is the true services price with future software       1
                                                                                       2
                                                                                           (~st −1 + ~st ) , which

we refer to as the “production function, future software.” The five price indexes are graphed in

Figures 4-7 and display a number of interesting points.

        First, the production function method that uses current software levels is consistently

higher than the hedonic Fisher index in Figure 4, which is itself bounded quite tightly by the

Laspeyres and Paasche indexes. A close examination of that figure shows that the indexes

diverge immediately in the first months of our sample, however, so to control for this possibly

erratic behavior, in Figure 5 we show the same five indexes but normalized at 100 in May 1998

rather than August 1997. In this case the production function index with current software is still

above the hedonic Fisher index, but by the end of the sample the indexes are about equal. This

means that the slower decline of the production function index in the early years (1998-1999) is

offset by a faster decline of this index in later year (2000-2001), as compared to the hedonic

Fisher index.
                                                          27

         This difference in the growth rates over the two halves of our sample can also be seen

from Figures 6 and 7, where we graph the five indexes from August 1997 – July 1999 and

August 1999 – September 2001, respectively. In Figure 6, the faster decline of the hedonic

indexes from the production function indexes are readily apparent. This is also seen from the

average annual growth rates (AAGR) reported in Table 6, where the hedonic Fisher declines at a

51% AAGR during the first half of the sample, as compared to 14% and 38% for the production

function with current and future software, respectively.14 If the sample for this study had

stopped in 1999, the evidence in Figure 6 and Table 6 would have led to the conclusion that the

hedonic method (either the Fisher, Laspeyres or Paasche) was substantially overstating the true

decline in prices as measured by the production function method with current software. This is

consistent with the results of the above Corollary when Γ > 0, so that software requirements and

hardware are complements.15

         However, this overstatement is reversed in the second half of the sample, as shown in

Figure 7 and the third row of Table 6, where the hedonic Fisher index falls at a 20% AAGR, as

compared to 35% and 38% for the production function with current and future software,

respectively. Evidently, both of the production function indexes are being pulled down by

factors that do not influence the hedonic indexes. In 2001, the AAGR of the production function

index with future software is actually above that with current software, which from the above

Corollary, can occur if and only if some of the Γ coefficients are negative. Recall that these

coefficients are negative for Windows software in two of the three regressions shown in Table 5,


14
    In comparison, Berndt and Rappaport (2001, p. 271) report an AAGR for the hedonic Laspeyres and Paasche
indexes of -40% and -42%, respectively, over 1994-1999, for desktop PC’s.
15
   The fact that the hedonic indexes are also overstating the decline in the production function index with future
software is not consistent with the inequality (18a) in Proposition 2. But notice that if we exclude the first 9 months
of the sample, as in Figure 6, then the hedonic indexes closely track the production function index with future
software, at least through the first half of the sample.
                                                 28

meaning that the Windows quality is a substitute rather than a complement with hardware

characteristics. This puzzling finding seems to affect the production function indexes in the

second half of our sample, possibly because of the especially large hard disk requirements of

Windows XP and 2003. We have already suggested above that the negative Γ coefficients on

Windows may be due to our assumption of a fixed lifetime of a machine (3 years). We conclude

by suggesting two other reasons for the slower growth rate of the hedonic indexes in the second

half of our sample, as compared to the production function method.

       First, we mention again that our sample used to estimate the hedonic regressions is much

smaller after 2000, because it is collected from advertisements in PC Magazine rather than the

PC Data Retail Hardware Monthly Report data. The somewhat erratic behavior of the hedonic

coefficients after 2000, and the fact that the hedonic indexes actually increase in 2001, suggest

that a large sample of computer prices and characteristics would be desirable in the second half

of our sample. This might affect our results.

       Setting aside this statistical concern, there is the conceptual possibility that technological

improvements in the production of RAM, hard disk space and speed of machines means that

these are no longer the limiting features of a computer. Rather, some computer scientists have

suggested that it is the functionality of software that limit users, and not the hardware. In this

case the slowdown in the fall of the hedonic computer price would be a real phenomena, and the

overstatement of the “true” decline in the price of computer services price would be history.

Under this scenario, the benefits to users would need to be evaluated using both hardware and

software. While we have incorporated software in this paper, it has been more as a complement

(or substitute) for hardware, but not as an independent feature affecting the functionality of

machines. Assessing this aspect of software is one important area for future research.
                                                       29


6. Conclusions

        In this paper we show that conventional hedonic methods may overstate the price decline

of personal computers, which are treated here as a durable good. Optimizing agents that

anticipate increases in software quality will “overbuy” the characteristics of a computer, in the

sense that the purchased bundle of characteristics is not fully utilized in the first months or year

that a computer is owned. Forward looking buyers equate the marginal benefit of characteristics

over the lifetime of a machine to the marginal cost at the time of purchase. In this case, hedonic

procedures may not provide valid bounds on the true price of computer services at the time when

the new machine is purchased, with the concurrent level of software. While we focus on

personal computers, our results may also apply to any durable good in which the quality of a

complementary product changes over time. For example, if there are switching costs associated

with bank accounts, then a consumer will establish a deposit account based on expected changes

in the size of banks’ ATM networks, ATMs being a strong complementary product to a deposit

account.16

        Our empirical application confirms the theoretical results in the first half of our sample.

Using data from UC Davis computer purchase behavior, we find that the hedonic price index

constructed with BLS methods typically overstates the fall in computer prices, as compared to

the true price index constructed using the users’ estimated production function. Furthermore, we

find that the true services prices falls faster when it is evaluated with future rather than current

levels of software. However, in the second half of the sample this bias has been ameliorated and

even reversed so that, depending on the starting month, the overall decline in the hedonic indexes

is not that different from the true indexes that result from estimating the firms’ production

16
  For example, Knittel and Stango (2003) estimate hedonic price regressions for banking services and find that
ATM network sizes have a significant impact on prices, as does the compatibility between deposit accounts of one
bank and the ATM’s of another.
                                                30

functions over computer characteristics. This provides some empirical justification for the

hedonic methods now used by BLS and BEA, despite the fact that their theoretical properties are

called into question when computers are treated as a durable good and software changes.

       We have suggested that one area for further research is to directly evaluate the usefulness

of software in enhancing consumer benefits of personal computers. White et al (2004) provide

evidence on the price declines of these software over 1984 to 2000, and note that price declines

are generally greater in the later years of their sample. Conversely, Ellison and Fudenberg

(2000) argue theoretically that the backwards connectivity of software packages, as well as

network effects, can lead firms to develop too many upgrades resulting in a loss in social welfare.

So a full evaluation of the costs and benefits of software is evidently complicated. But perhaps

we have reached a point where more attention needs to be paid to software and its characteristics,

and not to the declining costs of extra megahertz or gigabytes, in evaluating the productivity and

welfare impact of personal computers.
                                                           31


Appendix

Proof of Proposition 1:

        First suppose that Assumption 2 holds. The efficiency of a computer purchased in year t

relative to that in year t-1, with both using the software in t, is:


        f(xt,st)/f(xt-1,st) > [f(xt-1,st) + fx(xt,st)(xt – xt-1)]/f(xt-1,st)

                           = {f(xt-1,st) + [f(xt,st)/ht(xt)] βt’(xt–xt-1)}/f(xt-1,st)


where the first line follows from concavity of f(xt,st) with xt-1 < xt, and the second line from (6)

and the definition of βt ≡ ht’(xt). Multiplying through by [ht(xt)/f(xt,st)] and rearranging terms,

we obtain, [ht(xt) – βt’(xt – xt-1)]/ f(xt-1,st) > ht(xt)/f(xt,st). Then dividing by [ht-1(xt-1)/f(xt-1,st)] and
                             0
using the definition of P in (10a), we readily obtain (9a).

        The efficiency of a computer purchased in year t relative to t-1, using the software in t-1,

is:

        f(xt,st-1)/f(xt-1,st-1) < f(xt,st-1)/[f(xt,st-1) – fx(xt-1,st-1)(xt – xt-1)]

                           = f(xt,st-1)/{f(xt,st-1) – [f(xt-1,st-1)/ht-1(xt-1)] βt-1’(xt-xt-1)}


where the first line follows from concavity of f with xt-1 < xt, and the second line from (6) with

βt-1 ≡ ht-1’(xt-1). Inverting this expression, multiplying by [ht-1(xt-1)/f(xt-1,st-1)] and rearranging

terms, we obtain [ht-1(xt-1) + βt-1’(xt – xt-1)]/f(xt,st-1) > ht-1(xt-1)/f(xt-1,st-1). Then dividing by
                                                   1
[ht(xt-1)/f(xt,st-1)], using the definition of P in (10b), and inverting again we readily obtain (9b).

        Now suppose that Assumption 2 holds. The log-efficiency of a computer purchased in

year t relative to that in year t-1, with both using the software in t, is:
                                                               32


                            ln f(xt,st) – ln f(xt-1,st) > βt’(xt–xt-1)


which follows from concavity of ln f(xt,st) with xt-1 < xt, and (6) with βt ≡ ht’(xt)/ht(xt). Taking

exponents and inverting we obtain f(xt-1,st)/f(xt,st) < exp[–βt’(xt – xt-1)]. Then it follows from the
                0
definition of P in (11a) that (9a) holds.

        The log-efficiency of a computer purchased in year t relative to that in year t-1, with both

using the software in t-1, is:


                            ln f(xt,st-1) – ln f(xt-1,st-1) < βt-1’(xt–xt-1) ,


using the concavity of ln f(xt,st-1) with xt-1 < xt, and (6) with βt-1 ≡ ht-1’(xt-1)/ht-1(xt-1). Taking

exponents and inverting we obtain f(xt-1,st-1)/f(xt,st-1) > exp[–βt-1’(xt – xt-1)]. Then it follows from
                      1
the definition of P in (11b) that (9b) holds. QED


Proof of Proposition 2:

The proof of this result is identical to that of Proposition 1, where we just replace st-1 with ~st −1

and st with ~st , and make use of (17a) rather than (9).


Proof of the Corollary:

The first inequalities in (20a) and (20b) are identical to those in (18a) and (18b). Taking natural

logs of the second inequality in (20a), and multiplying by -1, we obtain:


                    ln f(x t ,~st-1) − ln f(x t-1, ~st-1) > ln f(x t ,s t-1) − ln f(x t-1,s t-1) ,

which can be re-written as:

                     xt              ~
                    ∫x t-1 [∂ ln f(z, st-1) / ∂z − ∂ ln f(z,s t-1) / ∂z ]dz ≥ 0 .
                                                     33


By the mean value theorem, the integrand can be written as [∂ 2 ln f(z,s) / ∂z∂s] ' ( ~st-1 − s t-1 ) for

some value of s between st-1 and ~st −1 . This expression is non-negative because (i) Γ =

∂2lnf/∂xt∂st > 0 by hypothesis, and (ii) ~st −1 ≥ s t −1 from (17b) and because software is growing

over time from Assumption 1(b) or 2(b). Therefore, the second inequality in (20a) holds. A

similar proof applies to the second inequality in (20b), and to the converse case where Γ =

∂2lnf/∂xt∂st < 0. QED
                                              34


References

Aizcorbe, Ana, 2004, “Semiconductor Prices in the mid-1990s: Can Mismeasurement Explain
       the Faster Rates of Price Decline?” presented at the American Economic Association,
       San Diego, January.

Berndt, Ernst R. and Neal J. Rappaport, 2001, “Price and Quality of Desktop and Mobile
       Personal Computers: A Quarter Century Historical Review,” American Economic
       Review, 91(2), May, 268-273.

Benkard, C. Lanier and Patrick Bajari, 2003, “Hedonic Price Indexes with Unobserved Product
      Characteristics, and Application to PC’s,” National Bureau of Economic Research
      working paper no. 9980.

Cartwright, David W., 1986, “Improved Deflation of Purchases of Computers,” Survey of
       Current Business 66, March, 7-10.

Cole, Rosanne, Y.C. Chen, Joan A. Barquin-Stolleman, Ellen Dulberger, Nurhan Helvacian and
       James H. Hodge, 1986, “Quality Adjusted Price Indexes for Computers Processors and
       Selected Peripheral Equipment,” Survey of Current Business 66, January, 41-50.

Diewert, W. Erwin, 1978, “Exact and Superlative Price Indexes,” Journal of Econometrics, 4,
      115-145.

Diewert, W. Erwin, 1980, “Aggregation Problems in the Measurement of Capital,” in Dan
      Usher, ed., The Measurement of Capital, Chicago: NBER & Univ. of Chicago, 433-528.

Diewert, W. Erwin, 2003, “Hedonic Regressions: A Consumer Theory Approach,” in Robert C.
      Feenstra and Matthew D. Shapiro, Scanner Data and Price Indexes, Chicago: NBER and
      Univ. of Chicago Press, 317-347.

Ellison, Glen and Drew Fudenberg, 2000, “The Neo-Luddite’s Lament: Excessive Upgrades in
        the Software Industry,” Rand Journal of Economics, Summer, 31(2), 253-272.

Feenstra, Robert C., 1995, “Exact Hedonic Price Indexes,” Review of Economics and Statistics,
       78(9), 634-653

Gordon, Robert J., 2000, “Does the ‘New Economy’ Measure Up to the Great Inventions of the
      Past?” Journal of Economic Perspectives, Fall, 49-74.

Grimm, Bruce T., 1998, “Price Indexes for Selected Semiconductors,” Survey of Current
     Business, 78, February, 8-24.

Harper, Michael J., Ernst R. Berndt and David O. Wood, 1989, “Rates of Return and Capital
       Aggregation Using Alternative Rental Prices,” in Dale W. Jorgenson and Ralph Landau,
       eds. Technology and Capital Formation, Cambridge: MIT Press, 331-372.
                                               35



Harper, Michael J., 2000, “Obsolescence and the Use of Prices to Measure Inputs of High Tech
       Capital,” Bureau of Labor Statistics, mimeo.

Holdway, Michael, 2001, “Quality-Adjusting Computer Prices in the Producer Price Index: An
      Overview,” Bureau of Labor Statistics, Washington, D.C.,
      http://www.bls.gov/ppi/ppicomqa.htm.

Hulten, Charles, 1990, “The Measurement of Capital,” in Ernst R. Berndt and Jack E. Triplett,
       eds., Fifty Years of Economic Measurement, Chicago: NBER and Univ. of Chicago, 119-
       152.

Jorgenson, Dale W. and Kevin J. Stiroh, 2000, “Raising the Speed Limit: U.S. Economic Growth
       in the Information Age,” Brookings Papers on Economic Activity, 31(1), forthcoming.

Knittel, Christopher R. and Victor Stango, 2003, “Compatibility and Pricing with Indirect
        Network Effects: Evidence from ATMs,” UC Davis, mimeo.

Moulton, Brendt R., 2001, “The Expanding Role of Hedonic Methods in the Official Statistics of
      the United States,” Bureau of Economic Analysis, Department of Commerce, mimeo.

Oliner, Stephen D., 1993, “Constant-Quality Price Change, Depreciation, and Retirement of
        Mainframe Computers,” in Murray F. Foss, Marilyn E. Manser and Allan H. Young,
        Price Measurements and Their Uses, Chicago: NBER and Univ. of Chicago, 19-61.

Oliner, Stephen D. and Daniel E. Sichel, 2000, “The Resurgence of Growth in the Late 1990s: Is
        Information Technology the Story?” Journal of Economic Perspectives, Fall, 3-22.

Pakes, Ariel, 2003, “A Reconsideration of Hedonic Price Indexes with an Application to PC’s,”
       American Economic Review, December, 1578-1596.

Rosen, Sherwin, 1974, “Hedonic Prices and Implicit Markets: Product Differentiation in Pure
       Competition,” Journal of Political Economy, 34-55.

Triplett, Jack E., 1986. “The Economic Interpretation of Hedonic Methods, “ Survey of Current
        Business 66, January, 49-52.

Triplett, Jack E., 1999, “The Solow Computer Paradox: What do Computers do to Productivity?”
        Canadian Journal of Economics, 32(2), April, 309-334.

White, Alan G., Jaison R. Abel, Ernst R. Berndt and Cory W. Monroe, 2004, "Hedonic Price
       Indexes for Personal Computer Operating Systems and Productivity Suites,” NBER
       working paper no. 10427
                                                                                                                 36




                                                                    Processor Speed Hedonic Coefficients

 0.002

0.0018

0.0016

0.0014

0.0012

 0.001

0.0008

0.0006

0.0004

0.0002

    0
                  Oct-97

                           Dec-97

                                    Feb-98

                                             Apr-98

                                                      Jun-98



                                                                        Oct-98

                                                                                 Dec-98

                                                                                          Feb-99

                                                                                                   Apr-99

                                                                                                            Jun-99



                                                                                                                              Oct-99

                                                                                                                                       Dec-99

                                                                                                                                                Feb-00

                                                                                                                                                         Apr-00

                                                                                                                                                                  Jun-00



                                                                                                                                                                                    Oct-00

                                                                                                                                                                                             Dec-00

                                                                                                                                                                                                      Feb-01

                                                                                                                                                                                                               Apr-01

                                                                                                                                                                                                                        Jun-01
         Aug-97




                                                               Aug-98




                                                                                                                     Aug-99




                                                                                                                                                                           Aug-00




                                                                                                                                                                                                                                 Aug-01
Figure 1: Plot of the Monthly Processor Speed Hedonic Coefficients for Semi-Log Model
                                                                                   Aug-01
                                                                                                                  Figure 2: Plot of the Monthly RAM Hedonic Coefficients for Semi-Log Model




                                                                                   Jun-01
                                                                                   Apr-01
                                                                                   Feb-01
                                                                                   Dec-00
                                                                                   Oct-00
                                                                                   Aug-00
                                                                                   Jun-00
                                                                                   Apr-00
     RAM Hedonic Coefficients




                                                                                   Feb-00
                                                                                   Dec-99
                                                                                   Oct-99
                                                                                   Aug-99
37




                                                                                   Jun-99
                                                                                   Apr-99
                                                                                   Feb-99
                                                                                   Dec-98
                                                                                   Oct-98
                                                                                   Aug-98
                                                                                   Jun-98
                                                                                   Apr-98
                                                                                   Feb-98
                                                                                   Dec-97
                                                                                   Oct-97
                                                                                   Aug-97
                                0.012


                                        0.01


                                               0.008


                                                       0.006


                                                               0.004


                                                                       0.002


                                                                               0


                                                                                       -0.002


                                                                                                -0.004


                                                                                                         -0.006
                                                                                                                    38




                                                                       Hard Drive Size Hedonic Coefficients

0.08



0.06



0.04



0.02



   0
                 Oct-97

                          Dec-97

                                   Feb-98

                                            Apr-98

                                                     Jun-98



                                                                       Oct-98

                                                                                Dec-98

                                                                                         Feb-99

                                                                                                  Apr-99

                                                                                                           Jun-99



                                                                                                                             Oct-99

                                                                                                                                      Dec-99

                                                                                                                                               Feb-00

                                                                                                                                                        Apr-00

                                                                                                                                                                 Jun-00



                                                                                                                                                                                   Oct-00

                                                                                                                                                                                            Dec-00

                                                                                                                                                                                                     Feb-01

                                                                                                                                                                                                              Apr-01

                                                                                                                                                                                                                       Jun-01
        Aug-97




                                                              Aug-98




                                                                                                                    Aug-99




                                                                                                                                                                          Aug-00




                                                                                                                                                                                                                                Aug-01
-0.02



-0.04



-0.06



   Figure 3: Plot of the Monthly Hard Drive Hedonic Coefficients for Semi-Log Model
                                                                                                                  39




                             Hedonic Fisher                                                                                                   Hedonic Laspeyres
                             Hedonic Paasche                                                                                                  Production Function, Current Software
                             Production Function, Future Software
100

 90

 80

 70

 60

 50

 40

 30

 20

 10

  0
      Aug-97
               Oct-97
                        Dec-97
                                 Feb-98
                                          Apr-98
                                                   Jun-98
                                                            Aug-98
                                                                     Oct-98
                                                                              Dec-98
                                                                                       Feb-99
                                                                                                Apr-99
                                                                                                         Jun-99
                                                                                                                  Aug-99
                                                                                                                           Oct-99
                                                                                                                                    Dec-99
                                                                                                                                             Feb-00
                                                                                                                                                      Apr-00
                                                                                                                                                               Jun-00
                                                                                                                                                                        Aug-00
                                                                                                                                                                                 Oct-00
                                                                                                                                                                                          Dec-00
                                                                                                                                                                                                   Feb-01
                                                                                                                                                                                                            Apr-01
                                                                                                                                                                                                                     Jun-01
                                                                                                                                                                                                                              Aug-01
                                                                     Figure 4: Price Index Calculations
                                                                                                40


                         Hedonic Fisher                                                                               Hedonic Laspeyres
                         Hedonic Paasche                                                                              Production Function, Current Software
                         Production Function, Future Software
100

 90

 80

 70

 60

 50

 40

 30

 20

 10

  0
               Jul-98




                                                                     Jul-99




                                                                                                                            Jul-00




                                                                                                                                                                                  Jul-01
      May-98



                        Sep-98

                                 Nov-98

                                          Jan-99

                                                   Mar-99

                                                            May-99



                                                                              Sep-99

                                                                                       Nov-99

                                                                                                 Jan-00

                                                                                                          Mar-00

                                                                                                                   May-00



                                                                                                                                     Sep-00

                                                                                                                                              Nov-00

                                                                                                                                                       Jan-01

                                                                                                                                                                Mar-01

                                                                                                                                                                         May-01



                                                                                                                                                                                           Sep-01
                                          Figure 5: Price Indexes Beginning in May of 1998
                                                                                                          41




                          Hedonic Fisher                                                                                              Hedonic Laspeyres
                          Hedonic Paasche                                                                                             Production Function, Current Software
                          Production Function, Future Software
100

 90

 80

 70

 60

 50

 40

 30

 20

 10

  0
                                                                                                         Jul-98




                                                                                                                                                                                                                     Jul-99
      Aug-97
               Sep-97
                        Oct-97
                                 Nov-97
                                          Dec-97
                                                   Jan-98
                                                            Feb-98
                                                                     Mar-98
                                                                              Apr-98
                                                                                       May-98
                                                                                                Jun-98


                                                                                                                  Aug-98
                                                                                                                           Sep-98
                                                                                                                                    Oct-98
                                                                                                                                             Nov-98
                                                                                                                                                      Dec-98
                                                                                                                                                               Jan-99
                                                                                                                                                                        Feb-99
                                                                                                                                                                                 Mar-99
                                                                                                                                                                                          Apr-99
                                                                                                                                                                                                   May-99
                                                                                                                                                                                                            Jun-99
                                    Figure 6: Price Indexes during First Half of the Sample
                                                              42



                   Hedonic Fisher                                               Hedonic Laspeyres
                   Hedonic Paasche                                              Production Function, Current Software
                   Production Function, Future Software
100

 90

 80

 70

 60

 50

 40

 30

 20

 10

  0
      Aug-99


               Oct-99


                          Dec-99


                                   Feb-00


                                            Apr-00


                                                     Jun-00


                                                              Aug-00


                                                                       Oct-00


                                                                                 Dec-00


                                                                                          Feb-01


                                                                                                   Apr-01


                                                                                                            Jun-01


                                                                                                                     Aug-01
                        Figure 7: Price Indexes during Second Half of the Sample
                                         43


Table 1: Aggregate Summary Statistics

  Variable        Mean         Median         Std Dev   Min   Max
    Price        1197.52       1088.91        5999.20   400   9430
  Processor
                 851.971         777          622.98    55    7768
    speed
    Ram
                  52.505         32            45.15     0    1128
(megabytes)
  HD Size
                  5.731         4.30           5.88      0    200
 (gigabytes)
 Have CD?         0.681           1             —        0     1
   SCSI?          0.004           0             —        0     1
 Zip Drive?       0.034           0             —        0     1
    NIC?          0.215           0             —        0     1
Sound Card?       0.397           0             —        0     1
   LCD?           0.063           0             —        0     1
Sample Size: 32,406
                                                              44



Table 2: Correlation Matrix of Computer Characteristics

                              Processor               HD           Have             Zip            Sound
                   Price                     RAM                           SCSI?            NIC?           LCD?
                                speed                 Size         CD?             Drive?          Card?
     Price         1.00
Processor speed    0.21          1.00
      Ram
                   0.31          0.66         1.00
  (megabytes)
    HD Size
                   0.21          0.83         0.66    1.00
   (gigabytes)
   Have CD?        -0.02        -0.01        -0.00    -0.00        1.00
    SCSI?          0.10          0.01         0.00    -0.01        0.03    1.00
  Zip Drive?       0.08          0.10         0.17    0.15         -0.01   -0.01    1.00
     NIC?          0.11          0.25         0.11    0.14         0.03    0.10    -0.02    1.00
 Sound Card?       0.14          0.51         0.29    0.50         -0.01   -0.01    0.05    0.07   1.00
    LCD?           0.07          0.12         0.09    0.14         0.03    0.00    -0.01    0.02   0.10    1.00
                                         45



Table 3: Aggregate Summary Statistics for UC Davis Purchasing Data

  Variable           Mean     Median          Std Dev      Min       Max
    Price        2488.72       2344.00        991.34       824       18340
  Processor
                 1809.78        1650          858.04       272       4519
    speed
    Ram
                 162.874        128           131.36        0        4096
(megabytes)
  HD Size
                     13.878      10           12.877        0         180
 (gigabytes)
 Have CD?            0.720        1             —           0          1
   SCSI?             0.068        0             —           0          1
 Zip Drive?          0.389        0             —           0          1
    NIC?             0.704        1             —           0          1
Sound Card?          0.503        1             —           0          1
   LCD?              0.182        0             —           0          1
Sample Size: 3,718
                                          46



Table 4: Summary Statistics for Hedonic Coefficients, Semi-Log Model

  Variable        Mean         Std Dev          Min       Max          N
  Processor
                 0.0007        0.0003          0.0003    0.0016        50
    speed
    Ram          0.0024        0.0015       -0.0012      0.0068        50
  HD Size        0.0050        0.0138       -0.0219      0.0416        50
 Have CD?        -0.0218       0.0746       -0.1973      0.1941        49
   SCSI?         0.2239        0.1249       -0.0231      0.5398        29
 Zip Drive?      0.0283        0.1047       -0.2288      0.2631        36
   NIC?          0.0567        0.0899       -0.2304      0.1905        50
Sound Card?      -0.0384       0.3867       -0.9108      0.4198        29
   LCD?          0.3309        0.3623       -0.7544      0.9122        31
                                                            47


Table 5: Second Stage Production Function Estimates

In this table, we report the results from estimating β t = a k + Axkt +   ∑θ τ Γs
                                                                               t,   t +τ   + u kt using data from
UC Davis departmental computer purchases from July 1997 to September 2001 using the first stage
hedonic pricing coefficients for processor speed, RAM and hard-drive size; the parameter estimates
represent the parameters of the production function. The θ’s are not separately identifiable from the G’s.
Instead, we define the θ’s by assuming a monthly interest rate of 2% and that departmental output is
constant over the three years. The measure of software quality is the recommended hard-drive space for
Microsoft Office and Windows. We assume that each department has an idiosyncratic constant term, ak,
but departments have the same A, θ and G.
                                            βSpeed                        βRAM                        βHDSize
                                                   -8***
                                        -5.92x10
Speed                                                                      —                            —
                                         (1.01x10-8)
                                          2.06x10-8                 -1.27x10-7
RAM                                                                                                     —
                                         (2.43x10-8)               (1.87x10-6)
                                         2.47x10-6***              -2.20x10-6*                    -6.96x10-5***
HD Size
                                         (2.61x10-7)               (1.26x10-6)                     (1.68x10-5)
                                          1.06x10-6                 4.20x10-5                      -7.33x10-3*
Have CD?
                                         (7.21x10-6)               (5.28x10-5)                     (4.28x10-3)
                                          -5.93x10-6                1.29x10-4                      -6.78x10-4
SCSI?
                                         (1.21x10-5)               (8.90x10-5)                     (7.19x10-4)
                                         -1.63x10-5**               8.93x10-5*                     -7.66x10-5*
Zip Drive?
                                         (6.64x10-6)               (4.87x10-6)                     (3.95x10-5)
                                          4.76x10-6                 9.04x10-6                     -1.78x10-3***
NIC?
                                         (6.87x10-6)               (5.04x10-5)                     (4.09x10-4)
                                          -6.88x10-6               -1.02x10-4**                    -5.96x10-4
Sound Card?
                                         (6.64x10-6)               (4.86x10-5)                     (3.95x10-4)
                                         5.45x10-5***               5.76x10-5                      1.28x10-3**
LCD?
                                         (9.51x10-6)               (6.70x10-5)                     (5.51x10-4)
ΓOffice                                  1.62x10-3***             -5.10x10-4***                     8.25x10-4
                                         (1.51x10-4)               (1.27x10-4)                     (3.04x10-4)
ΓWindows                                 -8.35x10-5**              4.96x10-4***                    -8.29x10-6
                                         (4.11x10-5)               (4.27x10-5)                     (5.04x10-6)
N=3931. White’s heteroskedastic consistent standard errors in parentheses. * denotes significant at the
.10 level, ** significant at the .05 level, and *** significant at the .01 level.
Notes: An F-test marginally rejects symmetry between the processor speed and hard drive equations (p-
value equal to 0.126). Equality between the processor speed and RAM equations and the hard drive and
RAM equations cannot be rejected (p-values equal to 0.617 and 0.402, respectively). The results with
respect to software quality remain qualitatively unchanged if symmetry is not imposed. Including a time
trend also left the results qualitatively unchanged.
                                                         48



Table 6: Average Annual Growth Rates of Price Indexes

                                      Hedonic                 Production Function,         Production Function,
                                    Fisher index                Current Software             Future Software
    Entire Sample*                      –36.4                         –25.5                         –38.2
       First Half                       –51.3                         –13.6                         –38.0
      Second Half                       –19.9                         –34.7                         –38.3
          1997                          –62.4                         –32.1                         –38.3
          1998                          –57.6                         –24.1                         –40.4
          1999                          –39.3                         –17.4                         –42.2
          2000                          –32.5                         –48.3                         –52.4
          2001                           30.6                          –6.3                          0.7
Notes: As in Figures 6 and 7, the first half of the sample is defined as August 1997 to July 1999, while the second
half is defined as August 1999 to September 2001.
* If the average annual growth rates are instead computed from May 1998 to September 2001, which excludes the
first 9 months of the sample, then we obtain –30.2 for the hedonic Fisher index, –28.2 for the production function
with current software, and –40.5 for the production function with future software.
