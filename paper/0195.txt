           FINDING LEVERAGE GROUPS*

                tvid E. Colerrn

               Working Paper 195

National Bureau of Economic Research, Inc.
            575 Technology Square
        Cambridge, Massachusetts 02139



                 August 1977




This   work was supported by the National Science
Foundation under Grant MCS76-11989    to the NBER
Computer Research Center.
                               Abstract

      A brief discussion of recent met1ds using the Hat Matrix for
identifying leverage points, and clustering techniques for finding
groups of data points is presented. The problem of identifying leverage
groups is addressed, and a heuristic algorithm for identifying both leverage
points and leverage groups is proposed. Semi-portable FORTRAN code
implementing the algorithm, a sample terminal session, and a discussion of
the terminal session are included.
Acknowledgements

     The   author, especially, ,xuld   like   to thank   Steve   Peters for many
helpful   discussions,   a useful derivation, and for running the software on a

506 by 13 matrix. Virginia KLema, Roy Welsch,       Ed Kuh, and Sally Coleman also
provided   useful insight. Sandra 1briarty gave extensive technical assistance.

Key Words and Phrases: leverage, outliers, least squares, cluster

analysis, data   analysis,   hat matrix, mathematical     software.
CR Categories 5.l'4 and 5.5.
                   Table of Contents

                                       Page

Introduction .
A problem

The Data Point Algorithm .
AnExample
Appendixi                               10

Appendix 2                             13

Appendix 3                             11.1



Appendix4                               19

Appendix5                               23

References                              24


Figures
Figurel.
Figure2                                 11

Fie 3                                   11
Introduction

        Of prinry concerTl in regression (least squares), y X +            E, is
that the       X utrix be non-singular and         well-conditioned.   A secondary

concern, sometimes neglected, is the distribution of data (sample)

points    (rows   of X) over the space spanned by the coluims of non-singular

X     Although it is desirable, and frequently          assumed to be true that   the
data    is norrrlly distributed (in each column), -this often is not the
case.     Two   issues then arise, the presence of leverage points, and
the   presence of clusters (groups) of points.

        Conceptually, a      leverage point is far away    (in some sense) from other

points    and their    centroid; it   is   an   outlier in X. If   p (for X, n by p)
is   larger than, say, 3 it is hard to spot leverage points by eye or scatter
plot because the hyper-parallelopiped representing the observation
space has 2 vertices. Furtherrrore, leverage is a relative property involving
n(n-l)/2 interpoint relationships. What is needed is a metric under which
each data point can be         assigued a number    indicating its leverage.
        Hoaglin and Welsch [5] present the use of the so called "Hat Matrix",
H, to examine         the   distribution of data points. In particular, they       use the
diagonal    elements,          of H as indicators of leverage, as is motivated

by the derivation of H: ietting xT stand for the transpose of X, (XTX)l

stand    for   the me-trix inverse of xTx,         stand for the computed approximation
to ,       and    y    stand for the fit realized at the least squares solut ion
        we have

         xTx      xTy,           (XTX)_1XTy, X y = X(XTX)_lXTy.
                                             —2—




    If we      set H X(XTX)_1XT we have y = Hy ; H "puts the hat" on                y.

    The leverage of the th row of X, X, is seen in the influence of y on
    the fit y., through h.. Since H is a symntric, idempotent matrix (a
    proj ec-t ion matrix), the h lie between 0 and 1. In their recent paper,
    Welsch and Kuh [8] develop the use of the h1 and related regression
    statistics. They define a cutoff level of 2pm (for n > 2p) above which
    an h1 is considered significant and row i is called a leverage point."
    Andrews and Pregibon [1] have developed another technique in which points
    with large h s are considered leverage points, and minors of X TX
    are computed in order to identify groups of leverage points (leverage groups).
              The problem of identifying clusters, or groups, has been approached
    in many ways. As in the leverage point problem, nonhierarchical cluster

•   analysis
    interpoint
                   **
                        is multidimensional in nature, and seeks to reduce O(n2 )
                relationships to n relationships, where each point is assigned
    to a cluster on the basis of some specified criterion, often involving Euclidean
    distance. Kendall and Stuart [] give a heuristic procedure using ranking
    which is moderately successful in partitioning data into groups. Gnanadesii<an
    [3],      in   his chapter, "Multidimensional Classification and    Clustering," arid

    Oliver [6] in his software documentation          on Cluster Analysis routines
    describe a number of different clustering criteria and clustering procedures,
    but the complexity of the problem constrains the algorithm to be molded by
    its context. Since we are interested only in leverage groups, we will want
    to   use criteria peculiar to assessing leverage.


    *
        See   Appendices 1 and     2,

    **
        See Gnanadesikan [3].
                                      —3—



A Problem

       As discussed by Welsch and Kuh     [8],the h   effectively reveal individual

leverage   points, but may not reveal those leverage points that geometrically
form   a group (are in close geometric proximity to one another). Proximity
to other data reduces the individual leverage, hence the h1, of any given
point.
       A simple example mekes this clear. Consider X which
consists of a cloud of 20 points centered at the origin, uniformly randomly
distributed within a 5-space hypercube of side length 4, plus a point
at (10, 10, 10, 10, 10). The latter point has h21 of about . 951,
close to the maximum value of 1. When a 22nd point is added nearby, at
(10.1, 10.1, 10.1, 10.1, 10.1) we find that h21 and h22 are about          .483 and

.492. A 23" point at (10.2, 10.2, 10.2, 10.2, 10.2) yields h21, h22
and    h23 of .321, 328, and .334. These h1 contrast       to others corresponding
to   points within the cloud, which are as high as .340, .425, .469, and 482.


         Sequential row   deletion   is unreliable because it is hard to

 determine   what constitutes   a group,   and a group could collectively have
 high leverage, while the h1     of its members might be rroderate. The

 sequential   procedure proposed by Andrews and Pregibon El] can also
 encounter difficulties for the same reasons. Welsch and Kuh [8]           mention

 the possibility of identifying groups through the correlation matrix of

the residuals, but as they note, this requires the computation of the
n(n -1)12 elements,          which requires either considerably
nore storage or an 0 (n2p2 ) -operations algorithm, If groups can be identified,
we might prefer to replace row deletion with the substitution of a group by
the mean    (or   some other summary measure) of its members, This     way,

crucial or expensive data is not lost,        and   the h convey nore information.
Welsch and Kul-i [8] discuss other possible remedies.
              —4—




     S




                            1.

                          xg
    ia)                                 Ib)




          0
                    la) Meas irlig the para lel
                         distance of point j from
                          point i
                    ib) Finding oitdistancers.
                    ic)   Finding leverage groups
S             0           headed by outdistancers.




    0
    l)
                                                          —5—




          The a]x)ve comprises the ntivation for a heuristic algorithm which
can be used to help identify leverage points and leverage groups. The
"Data Point Algorithm" (DPA) is O(n2p) operations, and requires little
extra storage beyond that of the X matrix, and thus is comparable
in cost to obtaining the h's and less expensive than obtaining the
           or RP.<'s proposed by Andrews and Pregibon [1]:

Data Point Algorithm

1. Given          X, n by p with all constant columns deleted.

2. Center            the    data; X ÷ X          -   X,     where the rows of X are identically
         the    coluirn     means of       X.        (The origin is now the centroid).

3.       Normalize each column by dividing by its                             nor times 2(pL'2)

         (The main      diagonal      of the observation space hypercube                   is   now of length       1).
4. Compute and              store   t1e £2                      of   each point   (row).
5. Compute for each point                       the    "normal" distance to all       other     points,

         that is,      distance parallel to its normal vector, (see Figure                          la).     Talj those points
         further      out   in the normal direction                  (those with negative parallel distances).
         Sum the      (scaled) inverses of these distances for each point,                          to   obtain a

         measure of local density.

6.. Single out those points with outdistance (further out) tallies of 0,

         particularly those that                 have large £2 norms (relative to the others,
         arid   to   the maximum, 0.5). We call these points "outdistaHcers"                             (see
         Figure      ib).

     *
         Giv vector x               (x ,
                                      1     x2,       ...   )T       the £ nori of x,       ix! L            ixj!


                                                                                                              21/2
         Given vector x
                                    (x1,    x2, . . . ,x)',      the £2 norm      of x, I lxi 12             x)
                                                                                                             1/2
                                                                                                         T
                                                                                                     (xx)
                                        —6—


7.    Each outdistancer is a leverage point, or the point furthest out
      in a leverage group. A relatively low "density" value means a
      point is isolated, a high value indicates the proximity (in the
      normal direction) of other points.
8.    Get a sorted listing (possibly via Tukey [7], and        Hoaglin and Wasserman's
      "Stem-and-Leaf" display)       of all points and   their normal distance to each
      outdistancer. Establish a cutoff level for normal distances, below
      which points form a leverage group "headed" by the outdistancer (see Figure lc).

      A listing of a semi-portable interactive driver, DPA FORTRAN, and
the initialization routine, MATRIX       FORTRAN, which implement the DPA

algorithm can be found in Appendix 3.
       By centering and normalizing the data, norms and distances can be
compared. The further out a given point is from the origin (the centroid)
and the fewer points are further out - the nre leverage it exerts. The
point furthest out in any normal direction exerts the nost leverage in
that direction. Any such point may be isolated, part of a tight group,
or anywhere on the continuum in-between. Again, we emphasize that the
group-inclusion function imposes a discrete, binary set of relationships
on a complex, continuous configuration, so there always is some arbitrariness
and simplification.        For our   purposes, we   uld seem to reduce complexity

by measuring distances only in         the normal directions (perpendicular distances
are   not   used), but    we increase complexity because normal distances are non-

symmetric, d1Rd2-1÷ d2 Rd1, unlike
                                         Euclidean   distances. Thus leverage groups

are   "headed"   by outdistancing leverage points. An exanpie makes the above

discussion     clearer.
                                     —7—




An Exair1e

      We return to the example     discussed   aixve, X coirised of twenty points
in   a cloud about the origin and    three   around (10, 10, 10, 10, 10).
                                             points

Appendix 4 contains the terminal session with DPA FORTRAN, to which the
reader should refer. *
       DPA   FORTRAN carries out steps 1) -5) of the Data Point Algorithm.
Examining the OTJTDIS coluim, we see that            8, 10, 17, 18, and 23
                                                points

are   outdistancers.     Point 23 especially catches our eye because its norm
is   listed as .5, the highest possible value. We now proceed to sequentially

examine   the   5 points singled out by step 6), using the Stem-and-Leaf

display (SLD) [7]. The SW for point 8 is done in units of lO_2, first of all

indicating    that   all but the three points isolated at the bottom of the display

are   relatively close    to point 8 (.01 is small relative to .5).    Nonetheless,
the   SW does show a well defined break in distances, at about .04. DPA
identifies points 17 and 19 to be part of the indicated group. We
adopt a convenient notation for leverage groups: (norm, cutoff value,
cutoff separation, outdistancer: other points in group), so we list
the   first leverage group identified as (.134, .04, .02, 8:    17, 19). The
norm indicates the extent of leverage, (low in this case). The cutoff

distance     indicates the approximate minimum normal-distance radius used
to define (contain) the group, (small, in this case). The cutoff separation
indicates the extent to which the group is isolated from the other points
(also small, in this case). Lastly, the header (outdistancer) of the
group, and the group members are      listed.


 Execution was on an IBM VM37 0/15 8     computer, FORTRAN H(OPT(2))   compiler.
                                      —8—


       Ontinuing with the example, DPA finds (.112, .01, .02, 10:17, 18) —

which meansthat     to weak    leverage groups   overlap at    point 17, (.147, -,          -, 17:-)-.
which has no wi-defined cutoff value, and (.114, . 01,          .   03, 18:10). DPA
clearly identifies the leverage group near (10, 10, 10, 10, 10) in this contrived

example: (.500, .02, .38, 23:21, 22).

       Turning to some "real" data, the example considered by Welsch and Kuh                 [8]
taken    from an econometric study of life-cycle savings rates) serves as a good
                                                                                        *
case for    comparison of   the use of the h1, and   the   Data Point Algorithm.
The h1 identify points      49, 44, 23, and 21 to be leverage points       (in order
of decreasing h1) and    37, 6, 147, 14, and 39 to be "contenders". DPA FORTRAN

indicates   that of 49, 44, 23,   and 21, only 49 is an outdistancer; 44 is

outdistanced by 39, 23 by 28, and 21 by 2, 3, 14, 25, 314, 40 and 43. No

clear leverage groups are indicated; 18, 37, 39, and 49 are all outdistancers,

but   SLD's reveal no significant breaks in the sorted normal distances, The
design of DPA FORTRAN allows the user to identify "secondary" leverage groups -
those headed by a point outdistanced by only a few other points. We call

such points "k-outdistancers" where k is the number of outdistancing points.
DPA FORTRAN lists as l—outdistancers points 114, 23, 25, 43,           414, and   50.

By defining a new generalized data structure for leverage groups headed by k-out-
distancers: (norm, cutoff value, cutoff separation, k-outdistancer :               (outdistancing

points), other points in group) we can conveniently display the fact that
point 25 has a norm of . 311, is a l-outdistancer (outdistanced by point 39) and with
cutoff value of .05 and cutoff separation of .03 it heads a group containing
points 2,   3, 11, 114, 15, 40, and   43
(.311,    .05, .03, 25:(39), 2, 3, 11, 114,   15, 40, 43).
*
 See Appendix 5.
                                      —9—



We also   have
(.320,                       3, 11, 1'4, 25,
          .05, .03, 43:(39), 2,                  '.1.0).



The other 1-outdistancers are uninteresting.
     In   conclusion, DPA FORTRAN shows points    39,      '49, 18, and   37 (in order

of decreasing    norm) to   be outdistancers, each   with    a roughly    uniformly distributed
set of neigh]x)rs in the direction towards the origin (centroid). Lcosely speaking,
points 25 and '43 head up a leverage group outdistanced only by point 39, and
containing points 2, 3, 11, lIt, and '40. This set of data does not appear to
contain any remarkable features in the way of leverage points or groups.
                                      - :iO   —



Appendix 1
X and   Aunted X
      An   issue   in the leverage point      (group) problem is      whether to search

for leverage points in X, or in X augmented by the right-hand side;
y: Xy. The appeal of using Xy is that it contains all input data,
                                 *
and a leverage measure, such as h (the diagonal of the

hat matrix for X y) can be computed for each point X y1 . The crucial
disadvantage of using X y is that such a measure as h can blur what are
two distinct cases: leverage points in X, and outliers in y. A leverage
point in X, X, is a point that (because of its position relative to
other points in X) has considerable influence on the fit, regardless of the
value     An outlier in X y is a point, X Iy5, with a y5 significantly
deviant from the fit at X obtained by fitting with all but point j.
      Some indication of the distinction between these two cases in evident
in   the relation: h h. + r?/SSR,             where SSR is the Sum of the Squared
Residuals. The h        measure leverage in           Xy space. The h1 measure
leverage in X space. The r/SSR depend                   upon X and y, but       for

rroderate h. they can      provide   an indication of outliers in y

      Two examples contrast the use of the h, and                 the h and r/SSR.
First,   consider the data, in (x,y) pairs:             (1,   .5), (2, 1), (3, 1.5), (.5, 1),

(1, 2), (1.5, 3), and     (2.'49,   3.5) (see Figure 2). Point 7 is clearly an

outlier in xl y      though not a leverage point         in X.     We find h      .609,   higher
than any other h1 by .031, so h reveals the isolation of point 7 in xl y
space. This contrasts to h7 .1419, less than h3 = .14214,and rISSR .190,
less than
              r/SSR     .300, revealing that          point 7   is second in leverage in X,

and   second in the list of outliers in           y    (though h7 is large enough to cause


The author is indebted to Steve Peters for deriving this inporant relationship.
                          —U—


'I
                                .7
3




                                I
I




0         I                     3    x
               Figure 2


'I




I'


                     .9
4

     1'   8'    I?. I
               Figure 3
                                       - 12   —




us to perhaps consider rISSR mare significant).

         As a second example, consider the data: (1, (i/2) + e1) for I 1, 2,... ,7

and            is a random variable of unifonn distribution in the interval       (0,   .1);

plus the points (4, 25) and (15, 7.5) (see Figure 3). Points 8 and 9 are

both outliers in X!Y, but point 8 is an outlier in y, not X, and point 9

is a leverage point in X, not an outlier in y. We find h                  .   999989 and
     =   .817, followed by h .268, so the h distinguish points 8 and 9
from the other points, but not from each other. However, h8             .122,


h9       .816, r/SSR      .878, and r/SSR         .001. Clearly,the h1 and r?/SSR

distinguish the leverage point in X from the outlier in y.

         The   above serves as niotivation to search for leverage points (or
nore generally, leverage groups) strictly in          the   X matrix, using the
scaled residuals to identify outliers in y.           If hat matrix diagonals are

being    used to identify leverage points, this approach has the added advantage
that the h1, unlike the h, are directly computable from the QR decomposition
of X - which can be used to solve xTx = xT.




See Welsch nd        Kuh [8] for the possibly more useful statistic , the studentized
residual, r.         r./(s(. (1-h. 1)1/2), where s, .  . is
                                                        the estimated error variance
for the "nt i"'fit1'
                                - 13   -




Appendix 2

      H is most reliably computed   via the   QR decomposition of X [2],

which uses Householder transfoniations (fonming orrLthogonal Q)   to reduce
X   to upper-triangular R. QR decomposition by Householder transformations, with
coluiru-i pivoting, is more stable than Grain-Schmidt orthogonalization, and yeilds a more
nearly orthogonal Q than MDdified Gram-Schimidt in the event of rank degeneracy.
     To compute H, we have H x(xTx)_lxT, X QR. Therefore,
H QR(RTQTQR)_l RTQT QQT (Q      is m by n here). The QR decomposition
routine used need not store Q explicitly, storing instead the u's which
define the Householder transformations, 1_T (the u's can be stored in a
lower triangular matrix). Each h1 is computed by applying the Householder
transformations to a vector representing the 1th column of 'n' then setting
h1 to the dot product of the vector (the first p elements) with itself.
The h. are more cheaply computed (at the price of extra storage) by forming
Q   explicitly.
                                      — 1L —


         Appendix 3
                                     DPA   FORTRAN


         INTEGER NM,MN,N,P,I,J,K,OUT,IN,IPLUS1,IERR,IV1(300),OUTDIS(510)   DPA0001O
         INTEGER 1V2(300) ,IV(300)                                         DPA0002O
         DOUBLE PRECISION X(510,15),NORMS(510),DENSE(510),TEMP,DFP         11PA00030
         DOUBLE PRECISION MAX,NRM1 NRM2,DIFF,T1 ,T2,DIST,EPSRV1 (510)      DPA0004O
         DOUBLE PRECISION DFLOATE'SORTDABS                                 DPA000SO
         LOGICAL SORTOR                                                    LIPA0006O
                                                                           DF A 00070
         DATA NM/510/,MN/15/                                               DPA0008O
                                                                           B PA 00090
C:::::GET DATA MATRIX AND PARAMETER VALUES,                                DPAOO100
                                                                           DPAOO1 10
         CALL MATRIX(NM,MNi'N,P,X,EPSrSORTORpOUT,IN)                       DPAOO12O
         11FF = 2.0110 * DSORT(DFLOAT(P))                                  DPAOO13O
                                                                           B PA 00140
c:u::cENTER THE DATA.                                                      DFAOO1SO
                                                                           0 PA 00160
       DO 20 I=1,P                                                         DPAOO17O
          TEMP = 0.01,0                                                    DPAOO18O
          DO 10 J=1,N                                                      BPAOO19O
               TEMP = TEMP + X(J,I)                                        DPAOO200
    10    CONTINUE                                                         OPAOO21O
          TEMP = TEMP / DFLOAT(N)                                          t'PA00220
          MAX = 0.0110                                                     LIPAOO23O
          DO 15 J=1,N                                                      11PA00240
               X(J,I) = X(J,I) — TEMP                                      11PA00250
               IF (BABS(X(JI)) .GT. MAX) MAX =       DABS(X(J,I))          DPAOO26O
    15      CC)NTINUE                                                      DPAOO27O
                                                                           OP A0 0280
c:::UN0RMALIzE THE DATA SUCH THAT THE OBSERVATION SPACE IS SCALED INTO 0PA00290
C:::.UA HYPERCUBE OF MAIN DIAGONAL LENGTH 1.                           E1PAOO300
                                                                           ['PA 00310
          DO 20 J=1,N                                                      DPAOO32O
                X(J,I) =   (X(J,I)   / MAX) / DFP                          BPAOO33O
    20 CONTINUE                                                            DFAOO34O
         ['0 30 I=1,N                                                      [1PA00350
          DENSE(I) = 0.0110                                                DPAOO36O
          OUTDIS(I) = 0                                                    DPAOO37O
    30 CONTINUE                                                            BPAOO38O
C                                                                          DPAOO39O
c:::::coMpuTE ROW L2 NORMS.                                                DPAOO400
C                                                                          DPAOO41O
         DO 0 I=1,N                                                        [1PA00420
          TEMP = 0.000                                                     DPAOO43O
          ['0 40 J=i,P                                                     DPAOO44O
                TEMP = TEMP + X(IrJ)*X(I,J)                                LIPAOO45O
    40    CONTINUE                                                         DPAOO46O
          NORMS(I) = DSORT(TEMP)                                           DPAOO47O
    50 CONTINUE                                                            0PA00480
                                                                           11PA00490
c:uCOMFUTE DISTANCES SQUARED.                                              DPAOO500
                                                                           DPAOO51O
         ['0 105 I=1,N                                                     DPAOO52O
            IF (I .EQ. N) GOTO 105                                         ['PAOOS3O
            IPLUS1 = I + 1                                                 0PA00540
            NRM1 = NORMS(I)                                                DPAOOS5O
            DO 100 J=IPLUS1,N                                              DPA00560
                 [lIST = 0.0110                                            DPAOO57O
                    DO 70 K1,P                                           DPAOO5BO
                         01FF = X(I,K) — X(J,K)                          DPAOO59O
                         01ST = 01ST + DIFF*DIFF                         DPAOO600
      70            CONTINUE                                             DPAOO61O
.C
      U::COMPUTE NORMAL (PARALLEL) DISTANCES,
                                                                         DPAOO62O
                                                                         0PA00630
                                                                         DPAOO64O
      75            NRM2   NORMS(J)                                      DPAOO6SO
                    Ti = (01ST + NRM1*NRM1 — NRM2*NRM2 / (2.000*NRM1)    0PA00660
                    12 = (0191 + NRM2*NRM2 — NRM1*NRM1) / (2.ODO*NRM2)   DPAOO67O
                    DENSE(I) = DENSECI) + 1.000 / (EPS + DABS(T1))       DPAOO6SO
                    DENSE(J)   DENSE(J) + 1.000 / (EPS + DABS(T2))       0PA00690
C                                                                        DPAOO700
c:::::TALLY OUTDISTANCING POINTS.                                        DPAOO71O
C
                                                                         DPA00720
                  IF (Ti •LE. 0.000) OUTDIS(I) = OUTDIS(I) + 1           0PA00730
                  IF (12 .LE. o,or'o) OUTDISJ) = OUTDISJ + 1             DPAOO74O
     100    CONTINUE                                                     DPAOO75O
     103 CONTINUE                                                        t'PA00760
         WRITE(OUT,1001)                                                 DPAOO77O
         DO 110 I=1,N                                                    DPAOO78O
            WRITE(OUT,1002) I,NORMS(I),EIENSE(I),QUTDIS(I)               t'FA00790
     110 CONTINUE                                                        DPAOO800
C
                                                                         DPAOOB1O
C:::::cHEC1c INDIVIDUAL POINTS OF INTEREST.                              DPAOO82O
C
                                                                         DPAOOB3O
     120 WRITE(OUT,1003)                                                 DPAOO84O
C
                                                                         DPAOO85O
c:n::GET POINT INDEX.                                                    DPAOOB6O
C
                                                                         DPAOOG7O
           READ(IN,1004) K                                               0PA00880
           IF (K*(2*N + 1 — 2*1<)) 130v200,150                           DPAQOG9O
130 WRITE(OUT,1006) N                                                    DPAOO900
           GO TO 120                                                     DPAOO91O
C
                                                                         DPAOO92O
C:::: :C0MPuTE DISTANCES.                                                DPAOO93O
C
                                                                         DPAOO94O
     150 NRM1    NORMS(K)                                                DPAOO95O
         DENSE(K) = 0.000
         RV1(K) = 0,000                                                  DPAOO96O
                                                                         0PA00970
         riO 170 I=1,N
                                                                         DPAOO98O
            OUTDIS(I) =      I                                           t'PA00990
            IF (I .EO. K) GO TO 170                                      DPAO1000
            0151 = 0.000
                                                                         DPAO1O1O
            DO 160 J=1,P                                                 t'PAO1O2O
                  01FF = X(K,J) — X(I,J)                                 DFA01030
                  0181    01ST + DIFF*DIFF                               EIPAO1O4O
     160    CONTINUE
            NRM2 = NORMS(I)                                              DPAO1OSO
            Ti = ([lIST + NRM1*NRM1 — NRM2*NRM2) / (2.000*NRM1)          DPAO1O6O
                                                                         DPAO1O7O
            DENSE(I) =     ri                                            DPAO1OBO
            RV1(I) = Ti                                                  t'PAO1O9O
     170 CONTINUE                                                        t'PAOilOO
         IF (.NOT. SORTOR) 0010 173                                      DPAO111O
                                                                         DPAO1 120
C:::::soRl- ANtI PRINT NORMAL DISTANCES TO POINT K.                      DPAO113O
c
                                                                         DPAO114O
           CALL ISORT1(N,OUTDIS,DENSE)                                   DPAO115O
           WRITE(OUT,lOio)
.          00 172 I=1,N
              J = OUTt'IS(I)
                                                                         DPAO116O
                                                                         DPAO117O
                                                                         IIPAO118O
              WRITE(OUT,loii) IJDENSEJ)                                  DPAO119O
     172 CONTINUE                                                        DPAO1200
         GO TO 120                                                       t'PAO121O
C
                                                                         11PA01220
cu:::r'o STEM          LEAF DISPLAY OF NORMAL DISTANCES TO POINT K.      DPAQ123O
                                                                          DPAO124O
     175 WRITE(OUT,1008) K                                                0PA01250
         CALL SLDSPY(RV1,IV1,1V2,1V3,OUTrpIS,Bo,N,300,IERR,OUT)           DPAO126O
         CALL IERRIO(IERR,OUT,16,16H STEM & LEAF        )                 DPAO127O
.
C
     ::::ESTABLISH CUTOFF DISTANCE,
                                                                          DPAO128O
                                                                          0PA01290
                                                                          EIPAO1300
         WRITE(OUT,1012)                                                  DPAO131O
         READ (IN,1013) 01ST                                              DPA01320
         WRITE(OUT,1009) K                                                t'PA01330
         DO 180 I=1,N                                                     0PA01340
            IF (I •EQ. K) GO TO 180                                       0PA01350
            IF (DABS(DENSE(I)) •LE. 01ST) LdRITE(OLJT,1004) I             DPAO136O
            IF (DENSE(I) •LE. 0.000) WRITE(OUT,1005) I                    DPAO137O
     180 CONTINUE                                                         0PA01380
         GO TO 120                                                        0PA01390
C                                                                         0PA01400
     200 STOP                                                             DPAO141O
C                                                                         DPAO142O
    1001   FORMAT(/40H    I     NORMS      DENSITY     OUTE'IS        )   0PA01430
    1002   FORMAT(14,2t112,3,218)                                         0PA01440
    1003   FORMAT(/35H POINT CHECKING (TYPE 0 TO STOP:           I)       DPAO145O
    1004   FORMAT(14)                                                     DPAO146O
    1005   FORMAT(I8)                                                     DPAO147O
    1006   FORMAT(/25H INDEX MUST BE FROM 1 TO       I4)                  DPAO148O
    1007   FORMAT(112,3012,3)                                             0PA01490
    1008   FORMAT(/18H STEM & LEAF   FOR    ,14)                          DPAO1500
    1009   FORMAT(/15H NEB OUT   FOR   p14)                               DPAO151O
    1010   FORMAT(/20H   I PT     01ST    I)                              DPA01520
    1011   FORMAT(2I4,012,3)                                              0PA01530
     012   FORMAT(/20H INPUT CUTOFF VALUE      )                          DPAO154O
      13   FORMAT(F1O.2)                                                  DPAO1SSO
C                                                                         DPAO156O
           END                                                            DPAO1S7O
      SUBROUTINE MATRIX(NM,MN,N,P,X,EPS,SORTOR,OUT,IN)                MAT0001O
      INTEGER NMMN,N,P,OUT,IN                                         MAT0002O
      DOUBLE PRECISION X(NM,MN) pEPS                                  MAT0003O
      LOGICAL SORTOR                                                  MAT0004O
C                                                                     MAT0005O
c:::::PARAMETER tIECRIPTION:                                          MAT0006O
C                                                                     MAT0007O
C     ON INPUT                                                        MAT0008O
C                                                                     MAT0009O
C        NM IS THE DECLARED ROW DIMENSION OF X.                       MATOO100
C                                                                     MATOO11O
C        MN IS THE DECLARED COLUMN DIMENSION OF X.                    MATOO12O
C                                                                     MATOO13O
C     ON ouipui:                                                      MATOO14O
C                                                                     MATOO15O
C        N IS THE NUMBER OF ROWS IN X.                                MATOO16O
C                                                                     MATOO17O
C        P IS THE NUMBER OF COLUMNS IN X.                             MATOO18O
C                                                                     MATOO19O
C        X IS THE DATA MATRIX (WITH NO CONSTANT COLUMNS).             MATOO200
C                                                                     MATOO21O
C        EPS IS A SMALL SCALING CONSTANT USED IN COMPUTING            MATOO22O
C             THE DENSITY VALUES FOR EACH POINT.                      MATOO23O
C                                                                     MATOO24O
         SORTOR IS A LOGICAL FLAG WHICH CONTROLS THE                  MATOO25O
              POINT—CHECKING PROCEDURE:                               MATOO26O
              IF SORTOR IS •TRUE. SORTED DISTANCES ARE DISPLAYED,     MATOO27O
              IF SORTOR IS •FALSE. STEM & LEAF AND A USER—SPECIFIED   MATOO28O
                                   CUTOFF POINT IS USED.              MAT00290
                                                                      MATOO300
C        OUT IS THE UNIT OUTPUT DEVICE.                               MATOO31O
C                                                                     MATOO32O
C        IN IS THE UNIT INPUT DEVICE.                                 MATOO33O
C                                                                     MATOO34O
      EPS = 1.OD—6                                                    MATOO35O
      SORTOR = •FALSE,                                                MATOO36O
      OUT = 6                                                         MATOO37O
      IN = 5                                                          MATOO3BO
                                                                      MATOO39O
c:::::usER SHOULD SUPPLY THE DESIRED MATRIX CALL HERE.                MATOO400
C                                                                     MATOO41O
     CALL OETMAT(NM,MN,N,P,X)                                         MATOO42O
                                                                      MATOO43O
     RETURN                                                           MATOO44O
     END                                                              MATOO45O
                                        - 18   —



Appendix 3 (cont.)


          Other FORTRAN Routines
          Used by DPA FORTRAN

ISORU     sorts N   real values in increasing

          order through an      integer index vector.

SLDSFY    is   part of a FORTRAN package implementing
          Tukey's   Stem-and-Leaf Display [7].
          It was   written by D. Hoaglin and        S. Wasserman

          and   appears   in   ROSEPACK   version 0.1,     developed at NBERJCRC.


IERRIO    is also in ROSEPACK version 0.11.          It prints an integer error
         return    code along with a message. It           can be replaced   by a
         WRITE statement       and   FORMAT   statement.
                                                      — 19 —
                Appendix

       start
        ECUTION BEGINS.,
        I             NORMS           DENSITY        OUTDIS
        1       o •   45411—01       0. 20711+04          14
        2       o .93711-01          0.11411+04            3
        3       0.11411+00          0 •   560D+03          1
        4       o •   96611—01      0.    66911+03        2
        5       0   • 69711—01      0.    36611+04        5
        6       0   • 90311—01      0.    40511+04         1
        7       0 •   24811-01      0.    15411+05        5
        a       0.13411+00          0.    27311+03        0
        9       0.86411—01          0.    30211+04        4
       10       0.11211+00          0.700D+03             0
       11       0.92411—01          0.11311+04            2
       12       0 • 79711—01        0 •   29311+04        8
       13       0. 11711+00         0,41811+03            1
       14       0.9 1211—01         0.    24611+04        2
       15       0.10211+00          0.    83811+03        2
       16       0 •   67211—01      0.    56311+04        7
       17       0.14711+00          0.    27111+03        0
       18       0. 11411+00         0.    41211+03        0
       19       0.10011+00          0.    90411+03        1
       20         74211—0 1
                0 •                 0.12011+04            1
       21       0. 48911+00         0. 30311+03           2
                0. 49411+00         0. 39211+03           1
                0.50011+00          0.30311+03            0
POINT CHECKING (TYPE 0 TO s1op:
:::.        8
STEM & LEAF                   FOR        8


                      STEM-AND—LEAF DISPLAY, N =                   23




                              (   UNIT =       0.100011—02     )



            1                       0 10
            1                       11
            2                       2 17
            3                       3 15
            3                       41
            5                       5 147

.       11
            8
            9
            3

            8
            8
                                    61178
                                    7 13
                                    8 1348
                                   9 I 169
                                  10 I
                                  11 126
            6                     12 1359

            3                       HI I         0.4893         0.4934   0.497A
  IERR =             0 STEM & LEAF

 INPUT CUTOFF VALUE
 >.04

              OUT    FOR      8



 POINT CHECKING (TYPE 0 TO STOP)
 ::         10

 STEM & LEAF               FOR 10


                    STEM—AND--LEAF      DISPLAY, N =            23




                             UNIT =        0,1000D--02   )



              3                   0 1057
              3                   11
              6                   2 1019
              8                   3 189
            11                    4   I 456
              3                   5 1666



                              11      13

              3                HI I           0.5431         0.5480   0.5530
IERR =               0 STEM & LEAF
INPUT CUTOFF VALUE
:::.   • 01

NEB OUT              FOR     10
       17
       18

POINT CHECKING (TYPE 0 TO STOPS
:::.        17
STEM & LEAF                FOR 17


                    STEM—AND—LEAF DISPLAY, N =                 23




                           ( UNIT =        0.10000—01 )
              1                 0 10
            2                      T13
            5                      F1455
S         11
           7
                                 S I 6667777
                                0. I 8889
                                1 lOll
           4                       TI
           4                       F15
           3                    HI I         0.6097        0.6150   0,6203
     IERR =        0 STEM & LEAF
 INPUT CUTOFF VALUE
 >0

 NEB OUT           FOR     17

 POINT CHECKING (TYPE 0 TO STOP):
 :>       18

 STEM & LEAF             FOR 18


                  STEM—AND—LEAF DISPLAY, N =                  23




                         ( UNIT =        0.l000r'—o2   )



           2                   0 109
           2                   11
           2                   21
           3                   3 17
           6                   4 1066
          10                   511236
           2                   6 148
          11                   7    I 0457
          7                    8 17
          6                  9 104
          4                 10 I
          4                 11 lB

          3                    HI I        0.4677          0.4718   0.4759
IERR =            0 STEM & LEAF

INPUT CUTOFF VALUE
. .01

     EB OUT       FOR     18
     10

POINT CHECKING (TYPE 0 TO STOP:
:>     23
          STEM—AND--LEAF DISPLAY N =            23


     3              LO I      0.0             0,0056   0.0112

                 ( UNIT =    0.1000D—01   )


     4               4.19
     4               51
     6                T133
     8                F144
     7                S I 6777777
     8               5. I 88999
     3               6 100
     1                 T13
IERR =    0 STEM & LEAF
INPUT CUTOFF VALUE

NEB OUT    FOR    23
21
22

POINT CHECKING (TYPE 0 TO STOP):


R; 1=0.20/1.16 16:42:39
                                           — 23   —



 Appendix 5

 The Sterling 1)ata (X Matrix)


  10.J TI   UN    LABEL

                  AUSTRALIA        29.35              2.87   2329.68    2.07
                  AUSTRIA          23,32              4.41   15i07,99   3.93
  3               BELGIUM          23.11              4,43   2108.47    3,02
  1               BOLIVIA          41,09              1.67              0.22
  S               BRAZIL           42.19              0.83    728,47    4.56
  6               CANADA           31.72              2.85   2982.88    2.43
  1               CHILE            39.74              1.34    662.86    2.67
                  CHINA(TAIWAN)    44.75              0.67    289.52    6.51
                 COLOMBIA          46.64              1.06    276.65    3.00
 10              COSTA RICA        47.64              1.14    471.24    2.8
 11              DENMARK           24,42              3.93   2496.53    3.99
 12              ECUADOR           46,31              1.19    207,77    2.19
 13              FINLAND           27.04              2.37   1681.25    4.32
  14             FRANCE            25.06              4.7    2213.82    4.52
 15              GERMANY F.R.      23.31              3.35   2457.12    3.44
 16              GREECE            25.62              3.1     870.85    6.28
 17              GUATEMALA         46.05              0.07    289.71    1.49
 18              HONI'URAS         47.32              0.50    232,44    3.19
 19              ICELAND           34.03              3,08   1900.1     1.12
 20              INDIA             41.31              0.96     88.94    1.54
 21              IRELAND           31,16              4.19   1139.95    2.99
22
23
                 ITALY             24.52              3.40   1390.      3'4
                 JAPAN             27.01              1.91   1257.20    8.21
 24              KOREA             41.74              0.91    207.63
25               LUXEMBOURG        21.0               3.73   2449.39    1.57
26               MALTA             32.54              2.47    601.05    8•12
2/               NORWAY            25.95              3.67   2231.03    3.62
28               NETHERLANDS       24.71              3.25   1740.7     7.66
                 NEW ZEALAND       32,61              3.17   1487.52    1.76
30               NICARAGUA         45.01              1.21    325.54    2.48
$1               PANAMA            43.56              1.2     560.56    3.61
                 PARAGUAY          41.10              1.05    220.56    1,03
                 PERU              44.19              1,28    400.06    0.67
34               PHILL1P1NES       46.26              1.12    152.01    2.
35               PORTUGAL          20.96              2.85    579.51    7.48
                 SOUTH AFRICA      31.94              2.28   P651.11    2.19
                 SOUTH RHOLIEgIA   31,92              1.52    250.96    2.
                 SPAIN             27.74              2.87    760.79
                 SWEDEN            21.44              4,54   3299.49    3,01
                 SWITZERLAND       23.49              3,73   2630.96    2.7
41               TURKEY            43.42              1.08              2.96
                                                              309,66
                 TUNISIA           46.12              1.21    249.07    1.13
43               UNITED KINGDOM    23.27              4.46   1813.93    2.01
                 UNITEr' STATES    29.01              3.43   4001.09    2,45
                 VENEZUELA         46,4               0.9     813.39     0.53
4/.,
                 ZAMBIA            45.2               0.56    138.33     5.14
                 JAMAICA           41.12              1,73    3110,47   10.23
                 URIJuLJAY         20.13              2.72    766.51     1.09
.0
                 LIBY(,            43.69              2.07    123.      16,71
                 MALAYSIA          47.2               0,66    242.6     5.011
                                      — 2L —




References

1. Andrews, D. F. and Pregilx)w, D., "Finding the Outliers that Matter,"
    Technical Report No • 1, University of Toronto, Graduate Department
    of Statistics, March 1977.
2.   Businger,   P. and Golub, C., 'Linear Least Squares Solutions by Householder
     Thansformations, in Wilkinson;' T. and Reinsch, C., (Eds.), Handbook for
     Automatic Corriputat ion, V.2: Linear Algebra, Springer-Verlag, p. 111-118,
     1971, Prepub. in Math. 7, p. 269—76. 1965.
3. Gnanadesikan, R., "Methods for Statistical Data Analysis of
     Multivariate Observations," John Wiley and Sons,     New York, 177,
     p. 82—120, 258—28'4.


4. Kendall, M. C. and Stuart, A., "The Advanced Theory of Statistics,"
    Vol. 3, Ed. 2, Hafner Publ. Co., New York, 1968, p. 338-9.

5. Hoaglin, D. C. and Welsch, R. E., "The Hat Matrix in Regression and
     ANOVA," WP 901-77, Alfred P. Sloan School of Management, MIT, Jan. 1977.

6.   Oliver, D., "Troll Experimental Programs: CLUSTER ANALYSIS,"
     Computer Research Center for Economics and Management Science,
     National Bureau of     Economic Research, Inc., August 1975.

7.   Thkey, J. W., "Exploratory Data Analysis," Addison-Wesley, 1977.
8. Welsch, R. E. and Kuh, E., "Linear Regression Diaguostics,"
     MIT and NBER, Working Paper No. 173, March 1977.
